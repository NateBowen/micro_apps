###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       06/Apr/2017  00:07:41
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\stm32f4xx_it.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework8\stm32f4xx_it.c
      1          #include "stm32f4xx_it.h"
      2          #include "main.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void SysTick_Handler(void)
      5          {
      6              // TimingDelay--;
      7          }
   \                     SysTick_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
      8          

   \                                 In section .bss, align 4
      9          uint32_t encoderFrequency, pulse, distance;
   \                     encoderFrequency:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     pulse:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     distance:
   \   00000000                      DS8 4
     10          

   \                                 In section .text, align 2, keep-with-next
     11          void TIM5_IRQHandler(void){
   \                     TIM5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     12            
     13            static uint16_t TIM5_CC3_sigLevel = 0;
     14            static uint16_t IC2ReadValue1 = 0;
     15            static uint16_t IC2ReadValue2 = 0;
     16            static uint16_t IC2ReadValue3 = 0;
     17            static uint16_t CaptureNumber = 0;
     18            static uint32_t Capture = 0;
     19            static uint32_t Capture2 = 0;
     20            
     21            if(TIM_GetITStatus(TIM5, TIM_IT_CC3) == SET) {
   \   00000002   0x2108             MOVS     R1,#+8
   \   00000004   0x....             LDR.N    R0,??DataTable0  ;; 0x40000c00
   \   00000006   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xF040 0x8098      BNE.W    ??TIM5_IRQHandler_0
     22              /* Check the signal level, only measure when starting with a peak */
     23              TIM5_CC3_sigLevel = (GPIOA->IDR & 0x04) >> 2;
   \   00000010   0x....             LDR.N    R0,??DataTable0_1  ;; 0x40020010
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable0_2
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     24              
     25              if ((CaptureNumber == 0) & (TIM5_CC3_sigLevel == 1)) {
   \   0000001C   0x....             LDR.N    R0,??DataTable0_3
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD10C             BNE.N    ??TIM5_IRQHandler_1
   \   00000024   0x....             LDR.N    R0,??DataTable0_2
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD108             BNE.N    ??TIM5_IRQHandler_1
     26                /* Get the Input Capture value */
     27                IC2ReadValue1 = TIM_GetCapture3(TIM5);
   \   0000002C   0x....             LDR.N    R0,??DataTable0  ;; 0x40000c00
   \   0000002E   0x.... 0x....      BL       TIM_GetCapture3
   \   00000032   0x....             LDR.N    R1,??DataTable0_4
   \   00000034   0x8008             STRH     R0,[R1, #+0]
     28                CaptureNumber = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable0_3
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
   \   0000003C   0xE07C             B.N      ??TIM5_IRQHandler_2
     29              }
     30              
     31              else if(CaptureNumber == 1) {
   \                     ??TIM5_IRQHandler_1: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable0_3
   \   00000040   0x8800             LDRH     R0,[R0, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD108             BNE.N    ??TIM5_IRQHandler_3
     32                /* Get the Input Capture value */
     33                IC2ReadValue2 = TIM_GetCapture3(TIM5);
   \   00000046   0x....             LDR.N    R0,??DataTable0  ;; 0x40000c00
   \   00000048   0x.... 0x....      BL       TIM_GetCapture3
   \   0000004C   0x....             LDR.N    R1,??DataTable0_5
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
     34                CaptureNumber = 2;
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x....             LDR.N    R1,??DataTable0_3
   \   00000054   0x8008             STRH     R0,[R1, #+0]
   \   00000056   0xE06F             B.N      ??TIM5_IRQHandler_2
     35              }
     36              
     37              else if (CaptureNumber == 2) {
   \                     ??TIM5_IRQHandler_3: (+1)
   \   00000058   0x....             LDR.N    R0,??DataTable0_3
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x2802             CMP      R0,#+2
   \   0000005E   0xD16B             BNE.N    ??TIM5_IRQHandler_2
     38                /* Get the Input Capture value */
     39                IC2ReadValue3 = TIM_GetCapture3(TIM5);
   \   00000060   0x....             LDR.N    R0,??DataTable0  ;; 0x40000c00
   \   00000062   0x.... 0x....      BL       TIM_GetCapture3
   \   00000066   0x....             LDR.N    R1,??DataTable0_6
   \   00000068   0x8008             STRH     R0,[R1, #+0]
     40                
     41                /* First period computation */
     42                if (IC2ReadValue2 > IC2ReadValue1) {
   \   0000006A   0x....             LDR.N    R0,??DataTable0_4
   \   0000006C   0x8800             LDRH     R0,[R0, #+0]
   \   0000006E   0x....             LDR.N    R1,??DataTable0_5
   \   00000070   0x8809             LDRH     R1,[R1, #+0]
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xD207             BCS.N    ??TIM5_IRQHandler_4
     43                  Capture = (IC2ReadValue2 - IC2ReadValue1);
   \   00000076   0x....             LDR.N    R0,??DataTable0_5
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0x....             LDR.N    R1,??DataTable0_4
   \   0000007C   0x8809             LDRH     R1,[R1, #+0]
   \   0000007E   0x1A40             SUBS     R0,R0,R1
   \   00000080   0x....             LDR.N    R1,??DataTable0_7
   \   00000082   0x6008             STR      R0,[R1, #+0]
   \   00000084   0xE013             B.N      ??TIM5_IRQHandler_5
     44                }
     45                else if (IC2ReadValue2 < IC2ReadValue1) {
   \                     ??TIM5_IRQHandler_4: (+1)
   \   00000086   0x....             LDR.N    R0,??DataTable0_5
   \   00000088   0x8800             LDRH     R0,[R0, #+0]
   \   0000008A   0x....             LDR.N    R1,??DataTable0_4
   \   0000008C   0x8809             LDRH     R1,[R1, #+0]
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xD20A             BCS.N    ??TIM5_IRQHandler_6
     46                  Capture = ((0xFFFF - IC2ReadValue1) + IC2ReadValue2);
   \   00000092   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000096   0x....             LDR.N    R1,??DataTable0_4
   \   00000098   0x8809             LDRH     R1,[R1, #+0]
   \   0000009A   0x1A40             SUBS     R0,R0,R1
   \   0000009C   0x....             LDR.N    R1,??DataTable0_5
   \   0000009E   0x8809             LDRH     R1,[R1, #+0]
   \   000000A0   0x1840             ADDS     R0,R0,R1
   \   000000A2   0x....             LDR.N    R1,??DataTable0_7
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   \   000000A6   0xE002             B.N      ??TIM5_IRQHandler_5
     47                }
     48                else {
     49                  Capture = 0;
   \                     ??TIM5_IRQHandler_6: (+1)
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x....             LDR.N    R1,??DataTable0_7
   \   000000AC   0x6008             STR      R0,[R1, #+0]
     50                }
     51                
     52                /* Second period computation */
     53                if (IC2ReadValue3 > IC2ReadValue2) {
   \                     ??TIM5_IRQHandler_5: (+1)
   \   000000AE   0x....             LDR.N    R0,??DataTable0_5
   \   000000B0   0x8800             LDRH     R0,[R0, #+0]
   \   000000B2   0x....             LDR.N    R1,??DataTable0_6
   \   000000B4   0x8809             LDRH     R1,[R1, #+0]
   \   000000B6   0x4288             CMP      R0,R1
   \   000000B8   0xD207             BCS.N    ??TIM5_IRQHandler_7
     54                  Capture2 = (IC2ReadValue3 - IC2ReadValue2);
   \   000000BA   0x....             LDR.N    R0,??DataTable0_6
   \   000000BC   0x8800             LDRH     R0,[R0, #+0]
   \   000000BE   0x....             LDR.N    R1,??DataTable0_5
   \   000000C0   0x8809             LDRH     R1,[R1, #+0]
   \   000000C2   0x1A40             SUBS     R0,R0,R1
   \   000000C4   0x....             LDR.N    R1,??DataTable0_8
   \   000000C6   0x6008             STR      R0,[R1, #+0]
   \   000000C8   0xE013             B.N      ??TIM5_IRQHandler_8
     55                }
     56                else if (IC2ReadValue3 < IC2ReadValue2) {
   \                     ??TIM5_IRQHandler_7: (+1)
   \   000000CA   0x....             LDR.N    R0,??DataTable0_6
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x....             LDR.N    R1,??DataTable0_5
   \   000000D0   0x8809             LDRH     R1,[R1, #+0]
   \   000000D2   0x4288             CMP      R0,R1
   \   000000D4   0xD20A             BCS.N    ??TIM5_IRQHandler_9
     57                  Capture2 = ((0xFFFF - IC2ReadValue2) + IC2ReadValue3);
   \   000000D6   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000000DA   0x....             LDR.N    R1,??DataTable0_5
   \   000000DC   0x8809             LDRH     R1,[R1, #+0]
   \   000000DE   0x1A40             SUBS     R0,R0,R1
   \   000000E0   0x....             LDR.N    R1,??DataTable0_6
   \   000000E2   0x8809             LDRH     R1,[R1, #+0]
   \   000000E4   0x1840             ADDS     R0,R0,R1
   \   000000E6   0x....             LDR.N    R1,??DataTable0_8
   \   000000E8   0x6008             STR      R0,[R1, #+0]
   \   000000EA   0xE002             B.N      ??TIM5_IRQHandler_8
     58                }
     59                else {
     60                  Capture2 = 0;
   \                     ??TIM5_IRQHandler_9: (+1)
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x....             LDR.N    R1,??DataTable0_8
   \   000000F0   0x6008             STR      R0,[R1, #+0]
     61                }   
     62                /* Frequency computation */
     63                encoderFrequency = (uint32_t) SystemCoreClock / (2 * (Capture + Capture2));
   \                     ??TIM5_IRQHandler_8: (+1)
   \   000000F2   0x....             LDR.N    R0,??DataTable0_9
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x....             LDR.N    R1,??DataTable0_7
   \   000000F8   0x6809             LDR      R1,[R1, #+0]
   \   000000FA   0x....             LDR.N    R2,??DataTable0_8
   \   000000FC   0x6812             LDR      R2,[R2, #+0]
   \   000000FE   0x1851             ADDS     R1,R2,R1
   \   00000100   0x0049             LSLS     R1,R1,#+1
   \   00000102   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000106   0x....             LDR.N    R1,??DataTable0_10
   \   00000108   0x6008             STR      R0,[R1, #+0]
     64                
     65                // Pulse width computation
     66                pulse = 2 * 84 * Capture / (SystemCoreClock / 1000000);
   \   0000010A   0x....             LDR.N    R0,??DataTable0_9
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0x....             LDR.N    R1,??DataTable0_11  ;; 0xf4240
   \   00000110   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000114   0x....             LDR.N    R1,??DataTable0_7
   \   00000116   0x6809             LDR      R1,[R1, #+0]
   \   00000118   0x22A8             MOVS     R2,#+168
   \   0000011A   0x4351             MULS     R1,R2,R1
   \   0000011C   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000120   0x....             LDR.N    R1,??DataTable0_12
   \   00000122   0x6008             STR      R0,[R1, #+0]
     67                distance = pulse / 58;
   \   00000124   0x....             LDR.N    R0,??DataTable0_12
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0x213A             MOVS     R1,#+58
   \   0000012A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000012E   0x....             LDR.N    R1,??DataTable0_13
   \   00000130   0x6008             STR      R0,[R1, #+0]
     68                
     69                CaptureNumber = 0;
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x....             LDR.N    R1,??DataTable0_3
   \   00000136   0x8008             STRH     R0,[R1, #+0]
     70              }
     71              /* Clear TIM5 Capture compare interrupt pending bit */
     72              TIM_ClearITPendingBit(TIM5, TIM_IT_CC3);
   \                     ??TIM5_IRQHandler_2: (+1)
   \   00000138   0x2108             MOVS     R1,#+8
   \   0000013A   0x....             LDR.N    R0,??DataTable0  ;; 0x40000c00
   \   0000013C   0x.... 0x....      BL       TIM_ClearITPendingBit
     73            }
     74          }
   \                     ??TIM5_IRQHandler_0: (+1)
   \   00000140   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::TIM5_CC3_sigLevel`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::IC2ReadValue1`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::IC2ReadValue2`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::IC2ReadValue3`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::CaptureNumber`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
   \                     `TIM5_IRQHandler::Capture`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `TIM5_IRQHandler::Capture2`:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x40000C00         DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x40020010         DC32     0x40020010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::TIM5_CC3_sigLevel`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::CaptureNumber`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::IC2ReadValue1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::IC2ReadValue2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::IC2ReadValue3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::Capture`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::Capture2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x........         DC32     encoderFrequency

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_12:
   \   00000000   0x........         DC32     pulse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_13:
   \   00000000   0x........         DC32     distance

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SysTick_Handler
       8   TIM5_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetCapture3
         8   -> TIM_GetITStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_12
       4  ??DataTable0_13
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
       4  Capture
       4  Capture2
       2  CaptureNumber
       2  IC2ReadValue1
       2  IC2ReadValue2
       2  IC2ReadValue3
       2  SysTick_Handler
       2  TIM5_CC3_sigLevel
     322  TIM5_IRQHandler
       4  distance
       4  encoderFrequency
       4  pulse

 
  30 bytes in section .bss
 380 bytes in section .text
 
 380 bytes of CODE memory
  30 bytes of DATA memory

Errors: none
Warnings: none
