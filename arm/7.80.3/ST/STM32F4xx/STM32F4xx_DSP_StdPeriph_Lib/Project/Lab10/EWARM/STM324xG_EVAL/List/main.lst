###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       03/Apr/2017  18:52:13
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\main.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab10\main.c
      1          #include "main.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     __NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD404             BMI.N    ??__NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x....             LDR.N    R2,??DataTable2  ;; 0xe000e400
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x5411             STRB     R1,[R2, R0]
   \   0000000E   0xE007             B.N      ??__NVIC_SetPriority_1
   \                     ??__NVIC_SetPriority_0: (+1)
   \   00000010   0x0109             LSLS     R1,R1,#+4
   \   00000012   0x....             LDR.N    R2,??DataTable2_1  ;; 0xe000ed18
   \   00000014   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000016   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000001A   0x4410             ADD      R0,R2,R0
   \   0000001C   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \                     ??__NVIC_SetPriority_1: (+1)
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t SysTick_Config(uint32_t)
   \                     SysTick_Config: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x1E41             SUBS     R1,R0,#+1
   \   00000004   0xF1B1 0x7F80      CMP      R1,#+16777216
   \   00000008   0xD301             BCC.N    ??SysTick_Config_0
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xE00E             B.N      ??SysTick_Config_1
   \                     ??SysTick_Config_0: (+1)
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable2_2  ;; 0xe000e014
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0x210F             MOVS     R1,#+15
   \   00000016   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000001A   0x.... 0x....      BL       __NVIC_SetPriority
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR.N    R1,??DataTable2_3  ;; 0xe000e018
   \   00000022   0x6008             STR      R0,[R1, #+0]
   \   00000024   0x2007             MOVS     R0,#+7
   \   00000026   0x....             LDR.N    R1,??DataTable2_4  ;; 0xe000e010
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0x2000             MOVS     R0,#+0
   \                     ??SysTick_Config_1: (+1)
   \   0000002C   0xBD02             POP      {R1,PC}          ;; return
      2          

   \                                 In section .text, align 2, keep-with-next
      3          int main(void)
      4          {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
      5            
      6            SysTick_Config(SystemCoreClock / 1000);
   \   00000004   0x....             LDR.N    R0,??DataTable2_5
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF44F 0x717A      MOV      R1,#+1000
   \   0000000C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000010   0x.... 0x....      BL       SysTick_Config
      7            
      8            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0xF44F 0x5080      MOV      R0,#+4096
   \   0000001A   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
      9            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     10            
     11            SPI_InitTypeDef SPI_InitStructure;
     12            GPIO_InitTypeDef GPIO_InitStructure;
     13            
     14            SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     15            SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
   \   0000002C   0xF44F 0x7082      MOV      R0,#+260
   \   00000030   0xF8AD 0x000A      STRH     R0,[SP, #+10]
     16            SPI_InitStructure.SPI_DataSize = SPI_DataSize_16b;
   \   00000034   0xF44F 0x6000      MOV      R0,#+2048
   \   00000038   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     17            SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xF8AD 0x000E      STRH     R0,[SP, #+14]
     18            SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0xF8AD 0x0010      STRH     R0,[SP, #+16]
     19            SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
   \   00000048   0xF44F 0x7000      MOV      R0,#+512
   \   0000004C   0xF8AD 0x0012      STRH     R0,[SP, #+18]
     20            SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_256; 
   \   00000050   0x2038             MOVS     R0,#+56
   \   00000052   0xF8AD 0x0014      STRH     R0,[SP, #+20]
     21            SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0xF8AD 0x0016      STRH     R0,[SP, #+22]
     22            SPI_InitStructure.SPI_CRCPolynomial = 7;
   \   0000005C   0x2007             MOVS     R0,#+7
   \   0000005E   0xF8AD 0x0018      STRH     R0,[SP, #+24]
     23            SPI_Init(SPI1, &SPI_InitStructure);
   \   00000062   0xA902             ADD      R1,SP,#+8
   \   00000064   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40013000
   \   00000066   0x.... 0x....      BL       SPI_Init
     24            
     25            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
   \   0000006A   0x20F0             MOVS     R0,#+240
   \   0000006C   0x9000             STR      R0,[SP, #+0]
     26            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0xF88D 0x0004      STRB     R0,[SP, #+4]
     27            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0xF88D 0x0006      STRB     R0,[SP, #+6]
     28            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000007A   0x2003             MOVS     R0,#+3
   \   0000007C   0xF88D 0x0005      STRB     R0,[SP, #+5]
     29            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
   \   00000080   0x2002             MOVS     R0,#+2
   \   00000082   0xF88D 0x0007      STRB     R0,[SP, #+7]
     30            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000086   0x4669             MOV      R1,SP
   \   00000088   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40020000
   \   0000008A   0x.... 0x....      BL       GPIO_Init
     31            
     32            //  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
     33            //  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
     34            //  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
     35            //  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
     36            //  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
     37            //  GPIO_Init(GPIOA, &GPIO_InitStructure);
     38            
     39            GPIO_PinAFConfig(GPIOA, GPIO_PinSource4, GPIO_AF_SPI1);
   \   0000008E   0x2205             MOVS     R2,#+5
   \   00000090   0x2104             MOVS     R1,#+4
   \   00000092   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40020000
   \   00000094   0x.... 0x....      BL       GPIO_PinAFConfig
     40            GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_SPI1);
   \   00000098   0x2205             MOVS     R2,#+5
   \   0000009A   0x2105             MOVS     R1,#+5
   \   0000009C   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40020000
   \   0000009E   0x.... 0x....      BL       GPIO_PinAFConfig
     41            GPIO_PinAFConfig(GPIOA, GPIO_PinSource6, GPIO_AF_SPI1);
   \   000000A2   0x2205             MOVS     R2,#+5
   \   000000A4   0x2106             MOVS     R1,#+6
   \   000000A6   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40020000
   \   000000A8   0x.... 0x....      BL       GPIO_PinAFConfig
     42            GPIO_PinAFConfig(GPIOA, GPIO_PinSource7, GPIO_AF_SPI1);
   \   000000AC   0x2205             MOVS     R2,#+5
   \   000000AE   0x2107             MOVS     R1,#+7
   \   000000B0   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40020000
   \   000000B2   0x.... 0x....      BL       GPIO_PinAFConfig
     43            
     44            //  GPIOA->ODR &= ~GPIO_Pin_4;
     45            
     46            SPI_Cmd(SPI1, ENABLE);
   \   000000B6   0x2101             MOVS     R1,#+1
   \   000000B8   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40013000
   \   000000BA   0x.... 0x....      BL       SPI_Cmd
     47            
     48            uint16_t count;
     49            uint16_t dumbDelay = 0;
   \   000000BE   0x2000             MOVS     R0,#+0
     50            
     51            /* Infinite loop */
     52            while (1) {
     53              for(count = 0; count < 256; count++){
   \                     ??main_0: (+1)
   \   000000C0   0x2400             MOVS     R4,#+0
   \   000000C2   0xE006             B.N      ??main_1
     54                
     55                while (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET);
     56                SPI_I2S_SendData(SPI1, count);
     57                for(dumbDelay = 0; dumbDelay < 0xFFF0; dumbDelay++);     
   \                     ??main_2: (+1)
   \   000000C4   0x1C40             ADDS     R0,R0,#+1
   \                     ??main_3: (+1)
   \   000000C6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000C8   0xF64F 0x71F0      MOVW     R1,#+65520
   \   000000CC   0x4288             CMP      R0,R1
   \   000000CE   0xDBF9             BLT.N    ??main_2
   \   000000D0   0x1C64             ADDS     R4,R4,#+1
   \                     ??main_1: (+1)
   \   000000D2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D4   0x2CFF             CMP      R4,#+255
   \   000000D6   0xDCF3             BGT.N    ??main_0
   \                     ??main_4: (+1)
   \   000000D8   0x2102             MOVS     R1,#+2
   \   000000DA   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40013000
   \   000000DC   0x.... 0x....      BL       SPI_I2S_GetFlagStatus
   \   000000E0   0x2800             CMP      R0,#+0
   \   000000E2   0xD0F9             BEQ.N    ??main_4
   \   000000E4   0x0021             MOVS     R1,R4
   \   000000E6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000E8   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40013000
   \   000000EA   0x.... 0x....      BL       SPI_I2S_SendData
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0xE7E9             B.N      ??main_3
     58              }
     59            }
     60          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0xE000E018         DC32     0xe000e018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40013000         DC32     0x40013000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40020000         DC32     0x40020000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SysTick_Config
         8   -> __NVIC_SetPriority
       0   __NVIC_SetPriority
      40   main
        40   -> GPIO_Init
        40   -> GPIO_PinAFConfig
        40   -> RCC_AHB1PeriphClockCmd
        40   -> RCC_APB2PeriphClockCmd
        40   -> SPI_Cmd
        40   -> SPI_I2S_GetFlagStatus
        40   -> SPI_I2S_SendData
        40   -> SPI_Init
        40   -> SysTick_Config


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
      46  SysTick_Config
      34  __NVIC_SetPriority
     242  main

 
 354 bytes in section .text
 
 354 bytes of CODE memory

Errors: none
Warnings: none
