###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       01/Feb/2017  21:34:38
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\stm32f4xx_it.c
#    Command line =  
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\stm32f4xx_it.c" -D USE_STDPERIPH_DRIVER -D STM32F40XX -D
#        USE_STM324xG_EVAL -lC
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\STM324xG_EVAL\List" -o
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\STM324xG_EVAL\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Full.h" -I
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\..\" -I
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\" -I
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\" -I
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\..\..\..\Utilities\STM32_EVAL\Common\" -I
#        "C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\" -Ol
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework
#        2\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework 2\stm32f4xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    Project/STM32F4xx_StdPeriph_Template/stm32f4xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V1.2.0RC2
      6            * @date    20-February-2013
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     14            *
     15            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     16            * You may not use this file except in compliance with the License.
     17            * You may obtain a copy of the License at:
     18            *
     19            *        http://www.st.com/software_license_agreement_liberty_v2
     20            *
     21            * Unless required by applicable law or agreed to in writing, software 
     22            * distributed under the License is distributed on an "AS IS" BASIS, 
     23            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     24            * See the License for the specific language governing permissions and
     25            * limitations under the License.
     26            *
     27            ******************************************************************************
     28            */
     29          
     30          /* Includes ------------------------------------------------------------------*/
     31          #include "stm32f4xx_it.h"
     32          #include "main.h"
     33          
     34          /** @addtogroup Template_Project
     35            * @{
     36            */
     37          
     38          /* Private typedef -----------------------------------------------------------*/
     39          /* Private define ------------------------------------------------------------*/
     40          /* Private macro -------------------------------------------------------------*/
     41          /* Private variables ---------------------------------------------------------*/
     42          /* Private function prototypes -----------------------------------------------*/
     43          /* Private functions ---------------------------------------------------------*/
     44          
     45          /******************************************************************************/
     46          /*            Cortex-M4 Processor Exceptions Handlers                         */
     47          /******************************************************************************/
     48          
     49          
     50          /* ISR for EXTI line 2 */

   \                                 In section .text, align 2, keep-with-next
     51          void EXTI2_IRQHandler(void)
     52          {
   \                     EXTI2_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     53            /* Check the EXTI line 2 flag */
     54            if(EXTI_GetITStatus(EXTI_Line2) != RESET)
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      BL       EXTI_GetITStatus
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD008             BEQ.N    ??EXTI2_IRQHandler_0
     55            {
     56              /* Toggle the Data line */
     57              GPIOC->ODR ^= 0xFF00;
   \   0000000C   0x....             LDR.N    R0,??DataTable0  ;; 0x40020814
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF490 0x407F      EORS     R0,R0,#0xFF00
   \   00000014   0x....             LDR.N    R1,??DataTable0  ;; 0x40020814
   \   00000016   0x6008             STR      R0,[R1, #+0]
     58              
     59              /* Clear the EXTI line 2 pending bit */
     60              EXTI_ClearITPendingBit(EXTI_Line2);
   \   00000018   0x2004             MOVS     R0,#+4
   \   0000001A   0x.... 0x....      BL       EXTI_ClearITPendingBit
     61            }
     62          }
   \                     ??EXTI2_IRQHandler_0: (+1)
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
     63          
     64          
     65          /**
     66            * @brief   This function handles NMI exception.
     67            * @param  None
     68            * @retval None
     69            */

   \                                 In section .text, align 2, keep-with-next
     70          void NMI_Handler(void)
     71          {
     72          }
   \                     NMI_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     73          
     74          /**
     75            * @brief  This function handles Hard Fault exception.
     76            * @param  None
     77            * @retval None
     78            */

   \                                 In section .text, align 2, keep-with-next
     79          void HardFault_Handler(void)
     80          {
     81            /* Go to infinite loop when Hard Fault exception occurs */
     82            while (1)
   \                     HardFault_Handler: (+1)
   \                     ??HardFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??HardFault_Handler_0
     83            {
     84            }
     85          }
     86          
     87          /**
     88            * @brief  This function handles Memory Manage exception.
     89            * @param  None
     90            * @retval None
     91            */

   \                                 In section .text, align 2, keep-with-next
     92          void MemManage_Handler(void)
     93          {
     94            /* Go to infinite loop when Memory Manage exception occurs */
     95            while (1)
   \                     MemManage_Handler: (+1)
   \                     ??MemManage_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??MemManage_Handler_0
     96            {
     97            }
     98          }
     99          
    100          /**
    101            * @brief  This function handles Bus Fault exception.
    102            * @param  None
    103            * @retval None
    104            */

   \                                 In section .text, align 2, keep-with-next
    105          void BusFault_Handler(void)
    106          {
    107            /* Go to infinite loop when Bus Fault exception occurs */
    108            while (1)
   \                     BusFault_Handler: (+1)
   \                     ??BusFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??BusFault_Handler_0
    109            {
    110            }
    111          }
    112          
    113          /**
    114            * @brief  This function handles Usage Fault exception.
    115            * @param  None
    116            * @retval None
    117            */

   \                                 In section .text, align 2, keep-with-next
    118          void UsageFault_Handler(void)
    119          {
    120            /* Go to infinite loop when Usage Fault exception occurs */
    121            while (1)
   \                     UsageFault_Handler: (+1)
   \                     ??UsageFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??UsageFault_Handler_0
    122            {
    123            }
    124          }
    125          
    126          /**
    127            * @brief  This function handles SVCall exception.
    128            * @param  None
    129            * @retval None
    130            */

   \                                 In section .text, align 2, keep-with-next
    131          void SVC_Handler(void)
    132          {
    133          }
   \                     SVC_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    134          
    135          /**
    136            * @brief  This function handles Debug Monitor exception.
    137            * @param  None
    138            * @retval None
    139            */

   \                                 In section .text, align 2, keep-with-next
    140          void DebugMon_Handler(void)
    141          {
    142          }
   \                     DebugMon_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    143          
    144          /**
    145            * @brief  This function handles PendSVC exception.
    146            * @param  None
    147            * @retval None
    148            */

   \                                 In section .text, align 2, keep-with-next
    149          void PendSV_Handler(void)
    150          {
    151          }
   \                     PendSV_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    152          
    153          /**
    154            * @brief  This function handles SysTick Handler.
    155            * @param  None
    156            * @retval None
    157            */

   \                                 In section .text, align 2, keep-with-next
    158          void SysTick_Handler(void)
    159          {
    160            //TimingDelay_Decrement();
    161          }
   \                     SysTick_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x40020814         DC32     0x40020814
    162          
    163          /******************************************************************************/
    164          /*                 STM32F4xx Peripherals Interrupt Handlers                   */
    165          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    166          /*  available peripheral interrupt handler's name please refer to the startup */
    167          /*  file (startup_stm32f4xx.s).                                               */
    168          /******************************************************************************/
    169          
    170          /**
    171            * @brief  This function handles PPP interrupt request.
    172            * @param  None
    173            * @retval None
    174            */
    175          /*void PPP_IRQHandler(void)
    176          {
    177          }*/
    178          
    179          /**
    180            * @}
    181            */ 
    182          
    183          
    184          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       8   EXTI2_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       2  BusFault_Handler
       2  DebugMon_Handler
      32  EXTI2_IRQHandler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       2  SysTick_Handler
       2  UsageFault_Handler

 
 54 bytes in section .text
 
 54 bytes of CODE memory

Errors: none
Warnings: none
