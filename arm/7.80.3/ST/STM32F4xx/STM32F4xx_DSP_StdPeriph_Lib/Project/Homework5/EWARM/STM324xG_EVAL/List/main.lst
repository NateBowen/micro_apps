###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       27/Feb/2017  14:36:08
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\main.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework5\main.c
      1          #include "main.h"
      2          
      3          #define LED0    GPIO_Pin_12
      4          #define LED1    GPIO_Pin_13
      5          

   \                                 In section .bss, align 4
      6          TIM_ICInitTypeDef  TIM_ICInitStructure;
   \                     TIM_ICInitStructure:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
      7          GPIO_InitTypeDef GPIO_InitStructure;
   \                     GPIO_InitStructure:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
      8          NVIC_InitTypeDef NVIC_InitStructureMain;
   \                     NVIC_InitStructureMain:
   \   00000000                      DS8 4
      9          

   \                                 In section .text, align 4, keep-with-next
     10          int main(void)
     11          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     12              /* TIM5 clock enable */
     13            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2008             MOVS     R0,#+8
   \   00000006   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     14          
     15            /* GPIOA and GPIOD clock enable */
     16            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     17            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2008             MOVS     R0,#+8
   \   00000016   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     18            
     19            /* GPIOD output LEDs configuration */
     20            GPIO_InitStructure.GPIO_Pin =  LED0 | LED1;
   \   0000001A   0xF44F 0x5040      MOV      R0,#+12288
   \   0000001E   0x4928             LDR.N    R1,??main_0
   \   00000020   0x6008             STR      R0,[R1, #+0]
     21            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x4926             LDR.N    R1,??main_0
   \   00000026   0x7108             STRB     R0,[R1, #+4]
     22            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x4925             LDR.N    R1,??main_0
   \   0000002C   0x7188             STRB     R0,[R1, #+6]
     23            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x4923             LDR.N    R1,??main_0
   \   00000032   0x71C8             STRB     R0,[R1, #+7]
     24            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   00000034   0x2003             MOVS     R0,#+3
   \   00000036   0x4922             LDR.N    R1,??main_0
   \   00000038   0x7148             STRB     R0,[R1, #+5]
     25            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   0000003A   0x4921             LDR.N    R1,??main_0
   \   0000003C   0x4821             LDR.N    R0,??main_0+0x4  ;; 0x40020000
   \   0000003E   0x.... 0x....      BL       GPIO_Init
     26            
     27            /* TIM5 channel 2 pin (PA1) configuration */
     28            GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
   \   00000042   0x2002             MOVS     R0,#+2
   \   00000044   0x491E             LDR.N    R1,??main_0
   \   00000046   0x6008             STR      R0,[R1, #+0]
     29            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000048   0x2002             MOVS     R0,#+2
   \   0000004A   0x491D             LDR.N    R1,??main_0
   \   0000004C   0x7108             STRB     R0,[R1, #+4]
     30            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x491B             LDR.N    R1,??main_0
   \   00000052   0x71C8             STRB     R0,[R1, #+7]
     31            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000054   0x491A             LDR.N    R1,??main_0
   \   00000056   0x481B             LDR.N    R0,??main_0+0x4  ;; 0x40020000
   \   00000058   0x.... 0x....      BL       GPIO_Init
     32          
     33            /* Connect TIM5 pins to AF1 */
     34            GPIO_PinAFConfig(GPIOA, GPIO_PinSource1, GPIO_AF_TIM5);
   \   0000005C   0x2202             MOVS     R2,#+2
   \   0000005E   0x2101             MOVS     R1,#+1
   \   00000060   0x4818             LDR.N    R0,??main_0+0x4  ;; 0x40020000
   \   00000062   0x.... 0x....      BL       GPIO_PinAFConfig
     35            
     36            /* Enable the TIM5 global Interrupt */
     37            NVIC_InitStructureMain.NVIC_IRQChannel = TIM5_IRQn;
   \   00000066   0x2032             MOVS     R0,#+50
   \   00000068   0x4917             LDR.N    R1,??main_0+0x8
   \   0000006A   0x7008             STRB     R0,[R1, #+0]
     38            NVIC_InitStructureMain.NVIC_IRQChannelPreemptionPriority = 0;
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x4916             LDR.N    R1,??main_0+0x8
   \   00000070   0x7048             STRB     R0,[R1, #+1]
     39            NVIC_InitStructureMain.NVIC_IRQChannelSubPriority = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x4914             LDR.N    R1,??main_0+0x8
   \   00000076   0x7088             STRB     R0,[R1, #+2]
     40            NVIC_InitStructureMain.NVIC_IRQChannelCmd = ENABLE;
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x4913             LDR.N    R1,??main_0+0x8
   \   0000007C   0x70C8             STRB     R0,[R1, #+3]
     41            NVIC_Init(&NVIC_InitStructureMain);
   \   0000007E   0x4812             LDR.N    R0,??main_0+0x8
   \   00000080   0x.... 0x....      BL       NVIC_Init
     42          
     43            /* TIM5 configuration: Input Capture mode ---------------------*/
     44            TIM_ICInitStructure.TIM_Channel = TIM_Channel_2;
   \   00000084   0x2004             MOVS     R0,#+4
   \   00000086   0x4911             LDR.N    R1,??main_0+0xC
   \   00000088   0x8008             STRH     R0,[R1, #+0]
     45            TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_BothEdge;
   \   0000008A   0x200A             MOVS     R0,#+10
   \   0000008C   0x490F             LDR.N    R1,??main_0+0xC
   \   0000008E   0x8048             STRH     R0,[R1, #+2]
     46            TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x490E             LDR.N    R1,??main_0+0xC
   \   00000094   0x8088             STRH     R0,[R1, #+4]
     47            TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x490C             LDR.N    R1,??main_0+0xC
   \   0000009A   0x80C8             STRH     R0,[R1, #+6]
     48            TIM_ICInitStructure.TIM_ICFilter = 0x0;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x490B             LDR.N    R1,??main_0+0xC
   \   000000A0   0x8108             STRH     R0,[R1, #+8]
     49            TIM_ICInit(TIM5, &TIM_ICInitStructure);
   \   000000A2   0x490A             LDR.N    R1,??main_0+0xC
   \   000000A4   0x480A             LDR.N    R0,??main_0+0x10  ;; 0x40000c00
   \   000000A6   0x.... 0x....      BL       TIM_ICInit
     50            
     51            /* TIM5 enable counter */
     52            TIM_Cmd(TIM5, ENABLE);
   \   000000AA   0x2101             MOVS     R1,#+1
   \   000000AC   0x4808             LDR.N    R0,??main_0+0x10  ;; 0x40000c00
   \   000000AE   0x.... 0x....      BL       TIM_Cmd
     53          
     54            /* Enable the CC3 Interrupt Request */
     55            TIM_ITConfig(TIM5, TIM_IT_CC2, ENABLE);
   \   000000B2   0x2201             MOVS     R2,#+1
   \   000000B4   0x2104             MOVS     R1,#+4
   \   000000B6   0x4806             LDR.N    R0,??main_0+0x10  ;; 0x40000c00
   \   000000B8   0x.... 0x....      BL       TIM_ITConfig
     56          
     57            while (1)
   \                     ??main_1: (+1)
   \   000000BC   0xE7FE             B.N      ??main_1
   \   000000BE   0xBF00             Nop      
   \                     ??main_0:
   \   000000C0   0x........         DC32     GPIO_InitStructure
   \   000000C4   0x40020000         DC32     0x40020000
   \   000000C8   0x........         DC32     NVIC_InitStructureMain
   \   000000CC   0x........         DC32     TIM_ICInitStructure
   \   000000D0   0x40000C00         DC32     0x40000c00
     58            {
     59              /* Doin' nothin', son. */ 
     60            }
     61          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> GPIO_Init
         8   -> GPIO_PinAFConfig
         8   -> NVIC_Init
         8   -> RCC_AHB1PeriphClockCmd
         8   -> RCC_APB1PeriphClockCmd
         8   -> TIM_Cmd
         8   -> TIM_ICInit
         8   -> TIM_ITConfig


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  GPIO_InitStructure
       4  NVIC_InitStructureMain
      12  TIM_ICInitStructure
     212  main

 
  24 bytes in section .bss
 212 bytes in section .text
 
 212 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
