###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       10/Apr/2017  20:18:59
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\main.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\main.c
      1          #include "main.h"
      2          

   \                                 In section .bss, align 4
      3          CAN_InitTypeDef        CAN_InitStructure;
   \                     CAN_InitStructure:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
      4          CAN_FilterInitTypeDef  CAN_FilterInitStructure;
   \                     CAN_FilterInitStructure:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
      5          CanTxMsg TxMessage;
   \                     TxMessage:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      6          CanRxMsg RxMessage;
   \                     RxMessage:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      7          char recievedMsg[8];
   \                     recievedMsg:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
      8          uint8_t ubKeyNumber = 0x0;
   \                     ubKeyNumber:
   \   00000000                      DS8 1
      9          
     10          static void NVIC_Config(void);
     11          static void CAN_Config(void);
     12          

   \                                 In section .data, align 4
     13          char *transmitMessage = "Herp a Derp!";
   \                     transmitMessage:
   \   00000000   0x........         DC32 ?_0
     14          

   \                                 In section .text, align 2, keep-with-next
     15          int main(void)
     16          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     17                 
     18            NVIC_Config();
   \   00000002   0x.... 0x....      BL       NVIC_Config
     19            CAN_Config();
   \   00000006   0x.... 0x....      BL       CAN_Config
     20            
     21             //setup message
     22             TxMessage.Data[0] = 'H';
   \   0000000A   0x2048             MOVS     R0,#+72
   \   0000000C   0x....             LDR.N    R1,??DataTable1
   \   0000000E   0x72C8             STRB     R0,[R1, #+11]
     23             TxMessage.Data[1] = 'e';
   \   00000010   0x2065             MOVS     R0,#+101
   \   00000012   0x....             LDR.N    R1,??DataTable1
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     24             TxMessage.Data[2] = 'r';
   \   00000016   0x2072             MOVS     R0,#+114
   \   00000018   0x....             LDR.N    R1,??DataTable1
   \   0000001A   0x7348             STRB     R0,[R1, #+13]
     25             TxMessage.Data[3] = 'p';
   \   0000001C   0x2070             MOVS     R0,#+112
   \   0000001E   0x....             LDR.N    R1,??DataTable1
   \   00000020   0x7388             STRB     R0,[R1, #+14]
     26             TxMessage.Data[4] = 'A';
   \   00000022   0x2041             MOVS     R0,#+65
   \   00000024   0x....             LDR.N    R1,??DataTable1
   \   00000026   0x73C8             STRB     R0,[R1, #+15]
     27             TxMessage.Data[5] = 'D';
   \   00000028   0x2044             MOVS     R0,#+68
   \   0000002A   0x....             LDR.N    R1,??DataTable1
   \   0000002C   0x7408             STRB     R0,[R1, #+16]
     28             TxMessage.Data[6] = 'e';
   \   0000002E   0x2065             MOVS     R0,#+101
   \   00000030   0x....             LDR.N    R1,??DataTable1
   \   00000032   0x7448             STRB     R0,[R1, #+17]
     29             TxMessage.Data[7] = 0x00; // EOS
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x....             LDR.N    R1,??DataTable1
   \   00000038   0x7488             STRB     R0,[R1, #+18]
     30             CAN_Transmit(CANx, &TxMessage);
   \   0000003A   0x....             LDR.N    R1,??DataTable1
   \   0000003C   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40006400
   \   0000003E   0x.... 0x....      BL       CAN_Transmit
     31             while(1) { 
   \                     ??main_0: (+1)
   \   00000042   0xE7FE             B.N      ??main_0
     32             }
     33          }
     34          

   \                                 In section .text, align 2, keep-with-next
     35          static void CAN_Config(void)
     36          {
   \                     CAN_Config: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     37            GPIO_InitTypeDef  GPIO_InitStructure;
     38            
     39            RCC_AHB1PeriphClockCmd(CAN_GPIO_CLK, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2008             MOVS     R0,#+8
   \   00000008   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     40          
     41            GPIO_PinAFConfig(CAN_GPIO_PORT, CAN_RX_SOURCE, CAN_AF_PORT);
   \   0000000C   0x2209             MOVS     R2,#+9
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c00
   \   00000012   0x.... 0x....      BL       GPIO_PinAFConfig
     42            GPIO_PinAFConfig(CAN_GPIO_PORT, CAN_TX_SOURCE, CAN_AF_PORT); 
   \   00000016   0x2209             MOVS     R2,#+9
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c00
   \   0000001C   0x.... 0x....      BL       GPIO_PinAFConfig
     43            
     44            GPIO_InitStructure.GPIO_Pin = CAN_RX_PIN | CAN_TX_PIN;
   \   00000020   0x2003             MOVS     R0,#+3
   \   00000022   0x9000             STR      R0,[SP, #+0]
     45            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000024   0x2002             MOVS     R0,#+2
   \   00000026   0xF88D 0x0004      STRB     R0,[SP, #+4]
     46            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   0000002A   0x2002             MOVS     R0,#+2
   \   0000002C   0xF88D 0x0005      STRB     R0,[SP, #+5]
     47            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xF88D 0x0006      STRB     R0,[SP, #+6]
     48            GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0xF88D 0x0007      STRB     R0,[SP, #+7]
     49            GPIO_Init(CAN_GPIO_PORT, &GPIO_InitStructure);
   \   0000003C   0x4669             MOV      R1,SP
   \   0000003E   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c00
   \   00000040   0x.... 0x....      BL       GPIO_Init
     50          
     51            RCC_APB1PeriphClockCmd(CAN_CLK, ENABLE);
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0xF05F 0x7000      MOVS     R0,#+33554432
   \   0000004A   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     52            
     53            CAN_DeInit(CANx);
   \   0000004E   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40006400
   \   00000050   0x.... 0x....      BL       CAN_DeInit
     54          
     55            CAN_InitStructure.CAN_TTCM = DISABLE;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x....             LDR.N    R1,??DataTable1_3
   \   00000058   0x7188             STRB     R0,[R1, #+6]
     56            CAN_InitStructure.CAN_ABOM = DISABLE;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR.N    R1,??DataTable1_3
   \   0000005E   0x71C8             STRB     R0,[R1, #+7]
     57            CAN_InitStructure.CAN_AWUM = DISABLE;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x....             LDR.N    R1,??DataTable1_3
   \   00000064   0x7208             STRB     R0,[R1, #+8]
     58            CAN_InitStructure.CAN_NART = DISABLE;
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x....             LDR.N    R1,??DataTable1_3
   \   0000006A   0x7248             STRB     R0,[R1, #+9]
     59            CAN_InitStructure.CAN_RFLM = DISABLE;
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x....             LDR.N    R1,??DataTable1_3
   \   00000070   0x7288             STRB     R0,[R1, #+10]
     60            CAN_InitStructure.CAN_TXFP = DISABLE;
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x....             LDR.N    R1,??DataTable1_3
   \   00000076   0x72C8             STRB     R0,[R1, #+11]
     61            //CAN_InitStructure.CAN_Mode = CAN_Mode_LoopBack;
     62            CAN_InitStructure.CAN_Mode = CAN_Mode_Normal;
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x....             LDR.N    R1,??DataTable1_3
   \   0000007C   0x7088             STRB     R0,[R1, #+2]
     63            CAN_InitStructure.CAN_SJW = CAN_SJW_1tq;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x....             LDR.N    R1,??DataTable1_3
   \   00000082   0x70C8             STRB     R0,[R1, #+3]
     64            
     65            // bitwidth = timeQuantum * # of qunatums
     66            //timeQuantum = 1 / ( BUAD*(1+bs1+bs2+SJW) )
     67            //Prescaller = busclock*timeQuantum+1
     68            
     69            CAN_InitStructure.CAN_BS1 = CAN_BS1_5tq;
   \   00000084   0x2004             MOVS     R0,#+4
   \   00000086   0x....             LDR.N    R1,??DataTable1_3
   \   00000088   0x7108             STRB     R0,[R1, #+4]
     70            CAN_InitStructure.CAN_BS2 = CAN_BS2_5tq;
   \   0000008A   0x2004             MOVS     R0,#+4
   \   0000008C   0x....             LDR.N    R1,??DataTable1_3
   \   0000008E   0x7148             STRB     R0,[R1, #+5]
     71            CAN_InitStructure.CAN_Prescaler = 8;
   \   00000090   0x2008             MOVS     R0,#+8
   \   00000092   0x....             LDR.N    R1,??DataTable1_3
   \   00000094   0x8008             STRH     R0,[R1, #+0]
     72            CAN_Init(CANx, &CAN_InitStructure);
   \   00000096   0x....             LDR.N    R1,??DataTable1_3
   \   00000098   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40006400
   \   0000009A   0x.... 0x....      BL       CAN_Init
     73          
     74            CAN_FilterInitStructure.CAN_FilterNumber = 0;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x....             LDR.N    R1,??DataTable1_4
   \   000000A2   0x7288             STRB     R0,[R1, #+10]
     75            CAN_FilterInitStructure.CAN_FilterMode = CAN_FilterMode_IdMask;
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x....             LDR.N    R1,??DataTable1_4
   \   000000A8   0x72C8             STRB     R0,[R1, #+11]
     76            CAN_FilterInitStructure.CAN_FilterScale = CAN_FilterScale_32bit;
   \   000000AA   0x2001             MOVS     R0,#+1
   \   000000AC   0x....             LDR.N    R1,??DataTable1_4
   \   000000AE   0x7308             STRB     R0,[R1, #+12]
     77            CAN_FilterInitStructure.CAN_FilterIdHigh = 0x0000;
   \   000000B0   0x2000             MOVS     R0,#+0
   \   000000B2   0x....             LDR.N    R1,??DataTable1_4
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
     78            CAN_FilterInitStructure.CAN_FilterIdLow = 0x0000;
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x....             LDR.N    R1,??DataTable1_4
   \   000000BA   0x8048             STRH     R0,[R1, #+2]
     79            CAN_FilterInitStructure.CAN_FilterMaskIdHigh = 0x0000;
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x....             LDR.N    R1,??DataTable1_4
   \   000000C0   0x8088             STRH     R0,[R1, #+4]
     80            CAN_FilterInitStructure.CAN_FilterMaskIdLow = 0x0000;
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x....             LDR.N    R1,??DataTable1_4
   \   000000C6   0x80C8             STRH     R0,[R1, #+6]
     81            CAN_FilterInitStructure.CAN_FilterFIFOAssignment = 0;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x....             LDR.N    R1,??DataTable1_4
   \   000000CC   0x8108             STRH     R0,[R1, #+8]
     82            CAN_FilterInitStructure.CAN_FilterActivation = ENABLE;
   \   000000CE   0x2001             MOVS     R0,#+1
   \   000000D0   0x....             LDR.N    R1,??DataTable1_4
   \   000000D2   0x7348             STRB     R0,[R1, #+13]
     83            CAN_FilterInit(&CAN_FilterInitStructure);
   \   000000D4   0x....             LDR.N    R0,??DataTable1_4
   \   000000D6   0x.... 0x....      BL       CAN_FilterInit
     84            
     85            TxMessage.StdId = 0x321;
   \   000000DA   0xF240 0x3021      MOVW     R0,#+801
   \   000000DE   0x....             LDR.N    R1,??DataTable1
   \   000000E0   0x6008             STR      R0,[R1, #+0]
     86            TxMessage.ExtId = 0x01;
   \   000000E2   0x2001             MOVS     R0,#+1
   \   000000E4   0x....             LDR.N    R1,??DataTable1
   \   000000E6   0x6048             STR      R0,[R1, #+4]
     87            TxMessage.RTR = CAN_RTR_DATA;
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x....             LDR.N    R1,??DataTable1
   \   000000EC   0x7248             STRB     R0,[R1, #+9]
     88            TxMessage.IDE = CAN_ID_STD;
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x....             LDR.N    R1,??DataTable1
   \   000000F2   0x7208             STRB     R0,[R1, #+8]
     89            TxMessage.DLC = 8;
   \   000000F4   0x2008             MOVS     R0,#+8
   \   000000F6   0x....             LDR.N    R1,??DataTable1
   \   000000F8   0x7288             STRB     R0,[R1, #+10]
     90            
     91            CAN_ITConfig(CANx, CAN_IT_FMP0, ENABLE);
   \   000000FA   0x2201             MOVS     R2,#+1
   \   000000FC   0x2102             MOVS     R1,#+2
   \   000000FE   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40006400
   \   00000100   0x.... 0x....      BL       CAN_ITConfig
     92            // enable transmit interrupt
     93            CAN_ITConfig(CANx, CAN_FLAG_RQCP0, ENABLE);
   \   00000104   0x2201             MOVS     R2,#+1
   \   00000106   0x....             LDR.N    R1,??DataTable1_5  ;; 0x38000001
   \   00000108   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40006400
   \   0000010A   0x.... 0x....      BL       CAN_ITConfig
     94          }
   \   0000010E   0xBD07             POP      {R0-R2,PC}       ;; return
     95          

   \                                 In section .text, align 2, keep-with-next
     96          static void NVIC_Config(void)
     97          {
   \                     NVIC_Config: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     98            NVIC_InitTypeDef  NVIC_InitStructure;
     99          
    100            NVIC_InitStructure.NVIC_IRQChannel = CAN1_RX0_IRQn;
   \   00000002   0x2014             MOVS     R0,#+20
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
    101          
    102            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    103            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0002      STRB     R0,[SP, #+2]
    104            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0003      STRB     R0,[SP, #+3]
    105            NVIC_Init(&NVIC_InitStructure);
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x.... 0x....      BL       NVIC_Init
    106            
    107            NVIC_InitStructure.NVIC_IRQChannel = CAN1_TX_IRQn;
   \   00000020   0x2013             MOVS     R0,#+19
   \   00000022   0xF88D 0x0000      STRB     R0,[SP, #+0]
    108            NVIC_Init(&NVIC_InitStructure);
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x.... 0x....      BL       NVIC_Init
    109          }
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     TxMessage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40006400         DC32     0x40006400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     CAN_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     CAN_FilterInitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x38000001         DC32     0x38000001

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x48 0x65          DC8 "Herp a Derp!"
   \              0x72 0x70    
   \              0x20 0x61    
   \              0x20 0x44    
   \              0x65 0x72    
   \              0x70 0x21    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    110          
    111          
    112          #ifdef  USE_FULL_ASSERT
    113          
    114          /**
    115            * @brief  Reports the name of the source file and the source line number
    116            *         where the assert_param error has occurred.
    117            * @param  file: pointer to the source file name
    118            * @param  line: assert_param error line source number
    119            * @retval None
    120            */
    121          void assert_failed(uint8_t* file, uint32_t line)
    122          { 
    123            /* User can add his own implementation to report the file name and line number,
    124               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    125          
    126            /* Infinite loop */
    127            while (1)
    128            {
    129            }
    130          }
    131          
    132          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   CAN_Config
        16   -> CAN_DeInit
        16   -> CAN_FilterInit
        16   -> CAN_ITConfig
        16   -> CAN_Init
        16   -> GPIO_Init
        16   -> GPIO_PinAFConfig
        16   -> RCC_AHB1PeriphClockCmd
        16   -> RCC_APB1PeriphClockCmd
       8   NVIC_Config
         8   -> NVIC_Init
       8   main
         8   -> CAN_Config
         8   -> CAN_Transmit
         8   -> NVIC_Config


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
      16  ?_0
     272  CAN_Config
      16  CAN_FilterInitStructure
      12  CAN_InitStructure
      46  NVIC_Config
      20  RxMessage
      20  TxMessage
      68  main
       8  recievedMsg
       4  transmitMessage
       1  ubKeyNumber

 
  77 bytes in section .bss
   4 bytes in section .data
  16 bytes in section .rodata
 410 bytes in section .text
 
 410 bytes of CODE  memory
  16 bytes of CONST memory
  81 bytes of DATA  memory

Errors: none
Warnings: none
