###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       10/Apr/2017  17:29:43
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\main.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab11\main.c
      1          #include "main.h"
      2          #include "delay.h"
      3          

   \                                 In section .bss, align 4
      4          CAN_InitTypeDef         CAN_InitStructure;
   \                     CAN_InitStructure:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
      5          CAN_FilterInitTypeDef   CAN_FilterInitStructure;
   \                     CAN_FilterInitStructure:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
      6          CanTxMsg                TxMessage;
   \                     TxMessage:
   \   00000000                      DS8 20
      7          

   \                                 In section .text, align 4, keep-with-next
      8          int main(void)
      9          {
   \                     main: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     10            
     11            /* NVIC configuration */
     12            NVIC_InitTypeDef  NVIC_InitStructure;
     13            
     14            NVIC_InitStructure.NVIC_IRQChannel = CAN1_RX0_IRQn;  
   \   00000002   0x2014             MOVS     R0,#+20
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
     15            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x0001      STRB     R0,[SP, #+1]
     16            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0002      STRB     R0,[SP, #+2]
     17            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0003      STRB     R0,[SP, #+3]
     18            NVIC_Init(&NVIC_InitStructure);
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x.... 0x....      BL       NVIC_Init
     19            
     20            GPIO_InitTypeDef  GPIO_InitStructure;
     21            
     22            /* Enable GPIO clock */
     23            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x2008             MOVS     R0,#+8
   \   00000024   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     24            
     25            /* Connect CAN pins to AF9 */
     26            GPIO_PinAFConfig(GPIOD, GPIO_PinSource0, GPIO_AF_CAN1);
   \   00000028   0x2209             MOVS     R2,#+9
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x4842             LDR.N    R0,??main_0      ;; 0x40020c00
   \   0000002E   0x.... 0x....      BL       GPIO_PinAFConfig
     27            GPIO_PinAFConfig(GPIOD, GPIO_PinSource1, GPIO_AF_CAN1); 
   \   00000032   0x2209             MOVS     R2,#+9
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x4840             LDR.N    R0,??main_0      ;; 0x40020c00
   \   00000038   0x.... 0x....      BL       GPIO_PinAFConfig
     28            
     29            /* Configure CAN RX and TX pins */
     30            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
   \   0000003C   0x2003             MOVS     R0,#+3
   \   0000003E   0x9001             STR      R0,[SP, #+4]
     31            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0xF88D 0x0008      STRB     R0,[SP, #+8]
     32            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   00000046   0x2002             MOVS     R0,#+2
   \   00000048   0xF88D 0x0009      STRB     R0,[SP, #+9]
     33            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xF88D 0x000A      STRB     R0,[SP, #+10]
     34            GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0xF88D 0x000B      STRB     R0,[SP, #+11]
     35            GPIO_Init(GPIOD, &GPIO_InitStructure);
   \   00000058   0xA901             ADD      R1,SP,#+4
   \   0000005A   0x4837             LDR.N    R0,??main_0      ;; 0x40020c00
   \   0000005C   0x.... 0x....      BL       GPIO_Init
     36            
     37            /* CAN configuration ********************************************************/  
     38            /* Enable CAN clock */
     39            RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);
   \   00000060   0x2101             MOVS     R1,#+1
   \   00000062   0xF05F 0x7000      MOVS     R0,#+33554432
   \   00000066   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     40            
     41            /* CAN register init */
     42            CAN_DeInit(CAN1);
   \   0000006A   0x4834             LDR.N    R0,??main_0+0x4  ;; 0x40006400
   \   0000006C   0x.... 0x....      BL       CAN_DeInit
     43            
     44            /* CAN cell init */
     45            CAN_InitStructure.CAN_TTCM = DISABLE;
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x4933             LDR.N    R1,??main_0+0x8
   \   00000074   0x7188             STRB     R0,[R1, #+6]
     46            CAN_InitStructure.CAN_ABOM = DISABLE;
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x4931             LDR.N    R1,??main_0+0x8
   \   0000007A   0x71C8             STRB     R0,[R1, #+7]
     47            CAN_InitStructure.CAN_AWUM = DISABLE;
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x4930             LDR.N    R1,??main_0+0x8
   \   00000080   0x7208             STRB     R0,[R1, #+8]
     48            CAN_InitStructure.CAN_NART = DISABLE;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x492E             LDR.N    R1,??main_0+0x8
   \   00000086   0x7248             STRB     R0,[R1, #+9]
     49            CAN_InitStructure.CAN_RFLM = DISABLE;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x492D             LDR.N    R1,??main_0+0x8
   \   0000008C   0x7288             STRB     R0,[R1, #+10]
     50            CAN_InitStructure.CAN_TXFP = DISABLE;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x492B             LDR.N    R1,??main_0+0x8
   \   00000092   0x72C8             STRB     R0,[R1, #+11]
     51            CAN_InitStructure.CAN_Mode = CAN_Mode_Normal;
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x492A             LDR.N    R1,??main_0+0x8
   \   00000098   0x7088             STRB     R0,[R1, #+2]
     52            CAN_InitStructure.CAN_SJW = CAN_SJW_1tq;
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x4928             LDR.N    R1,??main_0+0x8
   \   0000009E   0x70C8             STRB     R0,[R1, #+3]
     53            
     54            /* CAN Baudrate = 1 MBps (CAN clocked at 30 MHz) */
     55            CAN_InitStructure.CAN_BS1 = CAN_BS1_6tq;
   \   000000A0   0x2005             MOVS     R0,#+5
   \   000000A2   0x4927             LDR.N    R1,??main_0+0x8
   \   000000A4   0x7108             STRB     R0,[R1, #+4]
     56            CAN_InitStructure.CAN_BS2 = CAN_BS2_8tq;
   \   000000A6   0x2007             MOVS     R0,#+7
   \   000000A8   0x4925             LDR.N    R1,??main_0+0x8
   \   000000AA   0x7148             STRB     R0,[R1, #+5]
     57            CAN_InitStructure.CAN_Prescaler = 2;
   \   000000AC   0x2002             MOVS     R0,#+2
   \   000000AE   0x4924             LDR.N    R1,??main_0+0x8
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
     58            CAN_Init(CAN1, &CAN_InitStructure);
   \   000000B2   0x4923             LDR.N    R1,??main_0+0x8
   \   000000B4   0x4821             LDR.N    R0,??main_0+0x4  ;; 0x40006400
   \   000000B6   0x.... 0x....      BL       CAN_Init
     59            
     60            /* CAN filter init */
     61            CAN_FilterInitStructure.CAN_FilterNumber = 0;
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x4921             LDR.N    R1,??main_0+0xC
   \   000000BE   0x7288             STRB     R0,[R1, #+10]
     62            CAN_FilterInitStructure.CAN_FilterMode = CAN_FilterMode_IdMask;
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x4920             LDR.N    R1,??main_0+0xC
   \   000000C4   0x72C8             STRB     R0,[R1, #+11]
     63            CAN_FilterInitStructure.CAN_FilterScale = CAN_FilterScale_32bit;
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x491E             LDR.N    R1,??main_0+0xC
   \   000000CA   0x7308             STRB     R0,[R1, #+12]
     64            CAN_FilterInitStructure.CAN_FilterIdHigh = 0x0000;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x491D             LDR.N    R1,??main_0+0xC
   \   000000D0   0x8008             STRH     R0,[R1, #+0]
     65            CAN_FilterInitStructure.CAN_FilterIdLow = 0x0000;
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x491B             LDR.N    R1,??main_0+0xC
   \   000000D6   0x8048             STRH     R0,[R1, #+2]
     66            CAN_FilterInitStructure.CAN_FilterMaskIdHigh = 0x0000;
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x491A             LDR.N    R1,??main_0+0xC
   \   000000DC   0x8088             STRH     R0,[R1, #+4]
     67            CAN_FilterInitStructure.CAN_FilterMaskIdLow = 0x0000;
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x4918             LDR.N    R1,??main_0+0xC
   \   000000E2   0x80C8             STRH     R0,[R1, #+6]
     68            CAN_FilterInitStructure.CAN_FilterFIFOAssignment = 0;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x4917             LDR.N    R1,??main_0+0xC
   \   000000E8   0x8108             STRH     R0,[R1, #+8]
     69            CAN_FilterInitStructure.CAN_FilterActivation = ENABLE;
   \   000000EA   0x2001             MOVS     R0,#+1
   \   000000EC   0x4915             LDR.N    R1,??main_0+0xC
   \   000000EE   0x7348             STRB     R0,[R1, #+13]
     70            CAN_FilterInit(&CAN_FilterInitStructure);
   \   000000F0   0x4814             LDR.N    R0,??main_0+0xC
   \   000000F2   0x.... 0x....      BL       CAN_FilterInit
     71            
     72            /* Transmit Structure preparation */
     73            TxMessage.StdId = 0x321;
   \   000000F6   0xF240 0x3021      MOVW     R0,#+801
   \   000000FA   0x4913             LDR.N    R1,??main_0+0x10
   \   000000FC   0x6008             STR      R0,[R1, #+0]
     74            TxMessage.ExtId = 0x01;
   \   000000FE   0x2001             MOVS     R0,#+1
   \   00000100   0x4911             LDR.N    R1,??main_0+0x10
   \   00000102   0x6048             STR      R0,[R1, #+4]
     75            TxMessage.RTR = CAN_RTR_DATA;
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0x4910             LDR.N    R1,??main_0+0x10
   \   00000108   0x7248             STRB     R0,[R1, #+9]
     76            TxMessage.IDE = CAN_ID_STD;
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x490E             LDR.N    R1,??main_0+0x10
   \   0000010E   0x7208             STRB     R0,[R1, #+8]
     77            TxMessage.DLC = 1;
   \   00000110   0x2001             MOVS     R0,#+1
   \   00000112   0x490D             LDR.N    R1,??main_0+0x10
   \   00000114   0x7288             STRB     R0,[R1, #+10]
     78            
     79            /* Enable FIFO 0 message pending Interrupt */
     80            CAN_ITConfig(CAN1, CAN_IT_FMP0, ENABLE);
   \   00000116   0x2201             MOVS     R2,#+1
   \   00000118   0x2102             MOVS     R1,#+2
   \   0000011A   0x4808             LDR.N    R0,??main_0+0x4  ;; 0x40006400
   \   0000011C   0x.... 0x....      BL       CAN_ITConfig
     81            
     82            /* Infinite loop */
     83            while(1)
     84            {
     85              TxMessage.Data[0] = 9;
   \                     ??main_1: (+1)
   \   00000120   0x2009             MOVS     R0,#+9
   \   00000122   0x4909             LDR.N    R1,??main_0+0x10
   \   00000124   0x72C8             STRB     R0,[R1, #+11]
     86              CAN_Transmit(CAN1, &TxMessage);
   \   00000126   0x4908             LDR.N    R1,??main_0+0x10
   \   00000128   0x4804             LDR.N    R0,??main_0+0x4  ;; 0x40006400
   \   0000012A   0x.... 0x....      BL       CAN_Transmit
     87              Delay(1);
   \   0000012E   0x2001             MOVS     R0,#+1
   \   00000130   0x.... 0x....      BL       Delay
   \   00000134   0xE7F4             B.N      ??main_1
   \   00000136   0xBF00             Nop      
   \                     ??main_0:
   \   00000138   0x40020C00         DC32     0x40020c00
   \   0000013C   0x40006400         DC32     0x40006400
   \   00000140   0x........         DC32     CAN_InitStructure
   \   00000144   0x........         DC32     CAN_FilterInitStructure
   \   00000148   0x........         DC32     TxMessage
     88            }
     89          }
     90          
     91          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   main
        16   -> CAN_DeInit
        16   -> CAN_FilterInit
        16   -> CAN_ITConfig
        16   -> CAN_Init
        16   -> CAN_Transmit
        16   -> Delay
        16   -> GPIO_Init
        16   -> GPIO_PinAFConfig
        16   -> NVIC_Init
        16   -> RCC_AHB1PeriphClockCmd
        16   -> RCC_APB1PeriphClockCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  CAN_FilterInitStructure
      12  CAN_InitStructure
      20  TxMessage
     332  main

 
  48 bytes in section .bss
 332 bytes in section .text
 
 332 bytes of CODE memory
  48 bytes of DATA memory

Errors: none
Warnings: none
