###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       13/Mar/2017  19:57:46
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\task1.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\task1.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\STM324xG_EVAL\List\task1.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\EWARM\STM324xG_EVAL\Obj\task1.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab7\task1.c
      1          #include "task1.h"
      2          #include "main.h"
      3          
      4          
      5          /* Private function prototypes -----------------------------------------------*/
      6          static void TIM2_Config(void);
      7          static void DAC_Ch1_Config(void);
      8          
      9          //uint16_t SawtoothValue = 0;
     10          

   \                                 In section .text, align 2, keep-with-next
     11          int task1(void)
     12          {  
   \                     task1: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     13            
     14            GPIO_InitTypeDef GPIO_InitStructure;
     15            
     16            /* GPIOA clock enable (to be used with DAC) */
     17            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);                         
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     18            
     19            /* DAC Periph clock enable */
     20            RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0xF05F 0x5000      MOVS     R0,#+536870912
   \   00000012   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     21            
     22            /* DAC channel 1 (DAC_OUT1 = PA.4) configuration */
     23            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
   \   00000016   0x2010             MOVS     R0,#+16
   \   00000018   0x9000             STR      R0,[SP, #+0]
     24            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0xF88D 0x0004      STRB     R0,[SP, #+4]
     25            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xF88D 0x0007      STRB     R0,[SP, #+7]
     26            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000026   0x4669             MOV      R1,SP
   \   00000028   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   0000002A   0x.... 0x....      BL       GPIO_Init
     27            
     28            TIM2_Config();  
   \   0000002E   0x.... 0x....      BL       TIM2_Config
     29          //  DAC_Ch1_Config();
     30             
     31            while (1)
   \                     ??task1_0: (+1)
   \   00000032   0xE7FE             B.N      ??task1_0
     32            {  
     33          //    DAC_SetChannel1Data(DAC_Align_12b_R, SawtoothValue);
     34            }
     35          }
     36          

   \                                 In section .text, align 2, keep-with-next
     37          static void TIM2_Config(void)
     38          {
   \                     TIM2_Config: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     39            
     40            NVIC_InitTypeDef NVIC_InitStructure;
     41            GPIO_InitTypeDef GPIO_InitStructure;
     42            TIM_ICInitTypeDef  TIM_ICInitStructure;
     43            
     44            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     45            RCC_APB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     46            
     47            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x9001             STR      R0,[SP, #+4]
     48            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0xF88D 0x0008      STRB     R0,[SP, #+8]
     49            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0xF88D 0x0009      STRB     R0,[SP, #+9]
     50            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xF88D 0x000A      STRB     R0,[SP, #+10]
     51            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xF88D 0x000B      STRB     R0,[SP, #+11]
     52            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   00000034   0x.... 0x....      BL       GPIO_Init
     53              
     54            GPIO_PinAFConfig(GPIOA, GPIO_PinSource0, GPIO_AF_TIM2);
   \   00000038   0x2201             MOVS     R2,#+1
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   0000003E   0x.... 0x....      BL       GPIO_PinAFConfig
     55            
     56            TIM_ICInitStructure.TIM_Channel = TIM_Channel_3;
   \   00000042   0x2008             MOVS     R0,#+8
   \   00000044   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     57            TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0xF8AD 0x000E      STRH     R0,[SP, #+14]
     58            TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0xF8AD 0x0010      STRH     R0,[SP, #+16]
     59            TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0xF8AD 0x0012      STRH     R0,[SP, #+18]
     60            TIM_ICInitStructure.TIM_ICFilter = 0x0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0xF8AD 0x0014      STRH     R0,[SP, #+20]
     61            TIM_ICInit(TIM2, &TIM_ICInitStructure);
   \   00000060   0xA903             ADD      R1,SP,#+12
   \   00000062   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000066   0x.... 0x....      BL       TIM_ICInit
     62            
     63            
     64          //  /* Time base configuration */
     65          //  TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
     66          //  TIM_TimeBaseStructure.TIM_Period = 0xFF;          
     67          //  TIM_TimeBaseStructure.TIM_Prescaler = 0;       
     68          //  TIM_TimeBaseStructure.TIM_ClockDivision = 0;    
     69          //  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
     70          //  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
     71          //  
     72            /* TIM2 TRGO selection */
     73          //  TIM_SelectOutputTrigger(TIM2, TIM_TRGOSource_Update);
     74            
     75            
     76            NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
   \   0000006A   0x201C             MOVS     R0,#+28
   \   0000006C   0xF88D 0x0000      STRB     R0,[SP, #+0]
     77            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0xF88D 0x0001      STRB     R0,[SP, #+1]
     78            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0xF88D 0x0002      STRB     R0,[SP, #+2]
     79            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0xF88D 0x0003      STRB     R0,[SP, #+3]
     80            NVIC_Init(&NVIC_InitStructure);
   \   00000082   0x4668             MOV      R0,SP
   \   00000084   0x.... 0x....      BL       NVIC_Init
     81           
     82              /* TIM2 enable counter */
     83            TIM_Cmd(TIM2, ENABLE);
   \   00000088   0x2101             MOVS     R1,#+1
   \   0000008A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000008E   0x.... 0x....      BL       TIM_Cmd
     84            
     85              /* Enable the CC2 Interrupt Request */
     86            TIM_ITConfig(TIM2, TIM_IT_CC3, ENABLE);
   \   00000092   0x2201             MOVS     R2,#+1
   \   00000094   0x2108             MOVS     R1,#+8
   \   00000096   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000009A   0x.... 0x....      BL       TIM_ITConfig
     87            
     88          }
   \   0000009E   0xB007             ADD      SP,SP,#+28
   \   000000A0   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40020000         DC32     0x40020000
     89          
     90          static void DAC_Ch1_Config(void)
                             ^
Warning[Pe177]: function "DAC_Ch1_Config" was declared but never referenced
     91          {
     92            DAC_InitTypeDef  DAC_InitStructure;
     93            
     94            /* DAC channel1 Configuration */
     95            DAC_InitStructure.DAC_Trigger = DAC_Trigger_None;
     96            DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
     97            DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
     98            DAC_Init(DAC_Channel_1, &DAC_InitStructure);
     99            
    100            /* Enable DAC Channel1 */
    101            DAC_Cmd(DAC_Channel_1, ENABLE);   
    102          }
    103          
    104          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   TIM2_Config
        32   -> GPIO_Init
        32   -> GPIO_PinAFConfig
        32   -> NVIC_Init
        32   -> RCC_APB1PeriphClockCmd
        32   -> TIM_Cmd
        32   -> TIM_ICInit
        32   -> TIM_ITConfig
      16   task1
        16   -> GPIO_Init
        16   -> RCC_AHB1PeriphClockCmd
        16   -> RCC_APB1PeriphClockCmd
        16   -> TIM2_Config


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
     162  TIM2_Config
      52  task1

 
 218 bytes in section .text
 
 218 bytes of CODE memory

Errors: none
Warnings: 1
