###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       27/Mar/2017  19:19:30
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\task3.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\task3.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List\task3.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj\task3.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\task3.c
      1          #include "task3.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     __NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD404             BMI.N    ??__NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x....             LDR.N    R2,??DataTable3  ;; 0xe000e400
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x5411             STRB     R1,[R2, R0]
   \   0000000E   0xE007             B.N      ??__NVIC_SetPriority_1
   \                     ??__NVIC_SetPriority_0: (+1)
   \   00000010   0x0109             LSLS     R1,R1,#+4
   \   00000012   0x....             LDR.N    R2,??DataTable3_8  ;; 0xe000ed18
   \   00000014   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000016   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000001A   0x4410             ADD      R0,R2,R0
   \   0000001C   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \                     ??__NVIC_SetPriority_1: (+1)
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t SysTick_Config(uint32_t)
   \                     SysTick_Config: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x1E41             SUBS     R1,R0,#+1
   \   00000004   0xF1B1 0x7F80      CMP      R1,#+16777216
   \   00000008   0xD301             BCC.N    ??SysTick_Config_0
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xE00E             B.N      ??SysTick_Config_1
   \                     ??SysTick_Config_0: (+1)
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable3_1  ;; 0xe000e014
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0x210F             MOVS     R1,#+15
   \   00000016   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000001A   0x.... 0x....      BL       __NVIC_SetPriority
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR.N    R1,??DataTable3_2  ;; 0xe000e018
   \   00000022   0x6008             STR      R0,[R1, #+0]
   \   00000024   0x2007             MOVS     R0,#+7
   \   00000026   0x....             LDR.N    R1,??DataTable3_9  ;; 0xe000e010
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0x2000             MOVS     R0,#+0
   \                     ??SysTick_Config_1: (+1)
   \   0000002C   0xBD02             POP      {R1,PC}          ;; return
      2          
      3          extern __IO uint16_t startCapture;
      4          extern __IO uint16_t stopCapture;
      5          extern __IO uint16_t pulseWidth;
      6          

   \                                 In section .text, align 4, keep-with-next
      7          int task3(void)
      8          {
   \                     task3: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
      9          double distance = 0;
   \   00000006   0xED9F 0x....      VLDR.W   D8,??DataTable3_3
     10            SysTick_Config(SystemCoreClock / 1000);
   \   0000000A   0x....             LDR.N    R0,??DataTable3_4
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000012   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000016   0x.... 0x....      BL       SysTick_Config
     11            LCD_Config();
   \   0000001A   0x.... 0x....      BL       LCD_Config
     12            SR4_Config();
   \   0000001E   0x.... 0x....      BL       SR4_Config
     13            switchConfig();
   \   00000022   0x.... 0x....      BL       switchConfig
   \   00000026   0xE005             B.N      ??task3_0
     14            
     15              uint16_t ones, tens, hundreds;
     16            while (1) {
     17              if( stopCapture > startCapture ) {
                     ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
     18                pulseWidth = stopCapture - startCapture;
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
     19              } else {
     20                pulseWidth = startCapture - stopCapture;
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
     21              }
     22              
     23              if( GPIOA->IDR & GPIO_Pin_0 ) {
     24                //in
     25                distance = pulseWidth / 148;
     26              } else {
     27                //cm
     28                distance = pulseWidth / 58;
     29              }
     30              
     31              LCD_ClearDisplay();
     32              if( pulseWidth >= 640 && pulseWidth <= 5764 ) {
     33                ones = ( (int) distance) % 10;
     34                tens = (( (int) distance % 100) - ones) / 10;
     35                hundreds = ( (int) distance - tens - ones) / 100;      
     36                LCD_WriteDigit(hundreds); //Write hundreds digit
     37                LCD_WriteDigit(tens);  //Write tens digit
     38                LCD_WriteDigit(ones);  //Write ones digit
     39                if ( GPIOA->IDR & GPIO_Pin_0 ) {
     40                  LCD_Write(LETTER_i);
     41                  LCD_Write(LETTER_n);
     42                } else {
     43                  LCD_Write(LETTER_c);
     44                  LCD_Write(LETTER_m);
     45                }
     46              } else {
     47                LCD_DisplayINVALID();
   \                     ??task3_1: (+1)
   \   00000028   0x.... 0x....      BL       LCD_DisplayINVALID
     48              }
     49              Delay(500);
   \                     ??task3_2: (+1)
   \   0000002C   0xF44F 0x70FA      MOV      R0,#+500
   \   00000030   0x.... 0x....      BL       Delay
   \                     ??task3_0: (+1)
   \   00000034   0x....             LDR.N    R0,??DataTable3_5
   \   00000036   0x8800             LDRH     R0,[R0, #+0]
   \   00000038   0x....             LDR.N    R1,??DataTable3_6
   \   0000003A   0x8809             LDRH     R1,[R1, #+0]
   \   0000003C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003E   0x4288             CMP      R0,R1
   \   00000040   0xD207             BCS.N    ??task3_3
   \   00000042   0x....             LDR.N    R0,??DataTable3_6
   \   00000044   0x8800             LDRH     R0,[R0, #+0]
   \   00000046   0x....             LDR.N    R1,??DataTable3_5
   \   00000048   0x8809             LDRH     R1,[R1, #+0]
   \   0000004A   0x1A40             SUBS     R0,R0,R1
   \   0000004C   0x....             LDR.N    R1,??DataTable3_7
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
   \   00000050   0xE006             B.N      ??task3_4
   \                     ??task3_3: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable3_5
   \   00000054   0x8800             LDRH     R0,[R0, #+0]
   \   00000056   0x....             LDR.N    R1,??DataTable3_6
   \   00000058   0x8809             LDRH     R1,[R1, #+0]
   \   0000005A   0x1A40             SUBS     R0,R0,R1
   \   0000005C   0x....             LDR.N    R1,??DataTable3_7
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
   \                     ??task3_4: (+1)
   \   00000060   0x....             LDR.N    R0,??DataTable3_10  ;; 0x40020010
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x07C0             LSLS     R0,R0,#+31
   \   00000066   0xD509             BPL.N    ??task3_5
   \   00000068   0x....             LDR.N    R0,??DataTable3_7
   \   0000006A   0x8800             LDRH     R0,[R0, #+0]
   \   0000006C   0x2194             MOVS     R1,#+148
   \   0000006E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000072   0x.... 0x....      BL       __aeabi_i2d
   \   00000076   0xEC41 0x0B18      VMOV     D8,R0,R1
   \   0000007A   0xE008             B.N      ??task3_6
   \                     ??task3_5: (+1)
   \   0000007C   0x....             LDR.N    R0,??DataTable3_7
   \   0000007E   0x8800             LDRH     R0,[R0, #+0]
   \   00000080   0x213A             MOVS     R1,#+58
   \   00000082   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000086   0x.... 0x....      BL       __aeabi_i2d
   \   0000008A   0xEC41 0x0B18      VMOV     D8,R0,R1
   \                     ??task3_6: (+1)
   \   0000008E   0x.... 0x....      BL       LCD_ClearDisplay
   \   00000092   0x....             LDR.N    R0,??DataTable3_7
   \   00000094   0x8800             LDRH     R0,[R0, #+0]
   \   00000096   0xF5B0 0x7F20      CMP      R0,#+640
   \   0000009A   0xDBC5             BLT.N    ??task3_1
   \   0000009C   0x....             LDR.N    R0,??DataTable3_7
   \   0000009E   0x8800             LDRH     R0,[R0, #+0]
   \   000000A0   0xF241 0x6185      MOVW     R1,#+5765
   \   000000A4   0x4288             CMP      R0,R1
   \   000000A6   0xDABF             BGE.N    ??task3_1
   \   000000A8   0xEC51 0x0B18      VMOV     R0,R1,D8
   \   000000AC   0x.... 0x....      BL       __aeabi_d2iz
   \   000000B0   0x210A             MOVS     R1,#+10
   \   000000B2   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000B6   0xFB01 0x0412      MLS      R4,R1,R2,R0
   \   000000BA   0xEC51 0x0B18      VMOV     R0,R1,D8
   \   000000BE   0x.... 0x....      BL       __aeabi_d2iz
   \   000000C2   0x2164             MOVS     R1,#+100
   \   000000C4   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000C8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000CC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000CE   0x1B00             SUBS     R0,R0,R4
   \   000000D0   0x210A             MOVS     R1,#+10
   \   000000D2   0xFB90 0xF5F1      SDIV     R5,R0,R1
   \   000000D6   0xEC51 0x0B18      VMOV     R0,R1,D8
   \   000000DA   0x.... 0x....      BL       __aeabi_d2iz
   \   000000DE   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E0   0x1B40             SUBS     R0,R0,R5
   \   000000E2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000E4   0x1B00             SUBS     R0,R0,R4
   \   000000E6   0x2164             MOVS     R1,#+100
   \   000000E8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EE   0x.... 0x....      BL       LCD_WriteDigit
   \   000000F2   0x0028             MOVS     R0,R5
   \   000000F4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F6   0x.... 0x....      BL       LCD_WriteDigit
   \   000000FA   0x0020             MOVS     R0,R4
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0x.... 0x....      BL       LCD_WriteDigit
   \   00000102   0x....             LDR.N    R0,??DataTable3_10  ;; 0x40020010
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0x07C0             LSLS     R0,R0,#+31
   \   00000108   0xD506             BPL.N    ??task3_7
   \   0000010A   0x2069             MOVS     R0,#+105
   \   0000010C   0x.... 0x....      BL       LCD_Write
   \   00000110   0x206E             MOVS     R0,#+110
   \   00000112   0x.... 0x....      BL       LCD_Write
   \   00000116   0xE789             B.N      ??task3_2
   \                     ??task3_7: (+1)
   \   00000118   0x2063             MOVS     R0,#+99
   \   0000011A   0x.... 0x....      BL       LCD_Write
   \   0000011E   0x206D             MOVS     R0,#+109
   \   00000120   0x.... 0x....      BL       LCD_Write
   \   00000124   0xE782             B.N      ??task3_2
     50            }
     51          }
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void switchConfig() {
   \                     switchConfig: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     54            GPIO_InitTypeDef GPIO_InitStructure;
     55            
     56            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x9000             STR      R0,[SP, #+0]
     57            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x0004      STRB     R0,[SP, #+4]
     58            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000000E   0x2003             MOVS     R0,#+3
   \   00000010   0xF88D 0x0005      STRB     R0,[SP, #+5]
     59            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0006      STRB     R0,[SP, #+6]
     60            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xF88D 0x0007      STRB     R0,[SP, #+7]
     61            GPIO_Init(GPIOA, &GPIO_InitStructure); 
   \   00000020   0x4669             MOV      R1,SP
   \   00000022   0x....             LDR.N    R0,??DataTable3_11  ;; 0x40020000
   \   00000024   0x.... 0x....      BL       GPIO_Init
     62          }
   \   00000028   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0xE000E018         DC32     0xe000e018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x00000000         DC32     0x0,0x0
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     startCapture

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     stopCapture

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     pulseWidth

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x40020010         DC32     0x40020010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x40020000         DC32     0x40020000
     63          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SysTick_Config
         8   -> __NVIC_SetPriority
       0   __NVIC_SetPriority
      16   switchConfig
        16   -> GPIO_Init
      24   task3
        24   -> Delay
        24   -> LCD_ClearDisplay
        24   -> LCD_Config
        24   -> LCD_DisplayINVALID
        24   -> LCD_Write
        24   -> LCD_WriteDigit
        24   -> SR4_Config
        24   -> SysTick_Config
        24   -> __aeabi_d2iz
        24   -> __aeabi_i2d
        24   -> switchConfig


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_2
       8  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      46  SysTick_Config
      34  __NVIC_SetPriority
      42  switchConfig
     294  task3

 
 468 bytes in section .text
 
 468 bytes of CODE memory

Errors: none
Warnings: 3
