###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       26/Mar/2017  21:52:44
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\stm32f4xx_it.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\stm32f4xx_it.c
      1          #include "stm32f4xx_it.h"
      2          #include "main.h"
      3          

   \                                 In section .bss, align 4
      4          __IO uint32_t TimingDelay;
   \                     TimingDelay:
   \   00000000                      DS8 4
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void SysTick_Handler(void)
      7          {
      8            if (TimingDelay !=0) 
   \                     SysTick_Handler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD004             BEQ.N    ??SysTick_Handler_0
      9            {
     10              TimingDelay--;
   \   00000008   0x....             LDR.N    R0,??DataTable1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x6008             STR      R0,[R1, #+0]
     11            }
     12          }
   \                     ??SysTick_Handler_0: (+1)
   \   00000012   0x4770             BX       LR               ;; return
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void TIM4_IRQHandler(void){
   \                     TIM4_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     15            if (TIM_GetITStatus(TIM4, TIM_IT_CC1) != RESET)
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   00000006   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD00A             BEQ.N    ??TIM4_IRQHandler_0
     16            {
     17              /* Clear TIM2 Capture Compare1 interrupt pending bit*/
     18              TIM_ClearITPendingBit(TIM4, TIM_IT_CC1);
   \   0000000E   0x2102             MOVS     R1,#+2
   \   00000010   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   00000012   0x.... 0x....      BL       TIM_ClearITPendingBit
     19              
     20              GPIOD->ODR |= GPIO_Pin_12;
   \   00000016   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c14
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000001E   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40020c14
   \   00000020   0x6008             STR      R0,[R1, #+0]
   \   00000022   0xE02B             B.N      ??TIM4_IRQHandler_1
     21              /* LED1 turn-off after 500 ms */
     22          //    STM_EVAL_LEDOff(LED1);
     23            }
     24            else if (TIM_GetITStatus(TIM4, TIM_IT_CC2) != RESET)
   \                     ??TIM4_IRQHandler_0: (+1)
   \   00000024   0x2104             MOVS     R1,#+4
   \   00000026   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   00000028   0x.... 0x....      BL       TIM_GetITStatus
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD00A             BEQ.N    ??TIM4_IRQHandler_2
     25            {
     26              /* Clear TIM2 Capture Compare2 interrupt pending bit*/
     27              TIM_ClearITPendingBit(TIM4, TIM_IT_CC2);
   \   00000030   0x2104             MOVS     R1,#+4
   \   00000032   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   00000034   0x.... 0x....      BL       TIM_ClearITPendingBit
     28              GPIOD->ODR &= ~GPIO_Pin_13;
   \   00000038   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c14
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF430 0x5000      BICS     R0,R0,#0x2000
   \   00000040   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40020c14
   \   00000042   0x6008             STR      R0,[R1, #+0]
   \   00000044   0xE01A             B.N      ??TIM4_IRQHandler_1
     29              /* LED2 turn-off after 250 ms */
     30          //    STM_EVAL_LEDOff(LED2);
     31            }
     32            else if (TIM_GetITStatus(TIM4, TIM_IT_CC3) != RESET)
   \                     ??TIM4_IRQHandler_2: (+1)
   \   00000046   0x2108             MOVS     R1,#+8
   \   00000048   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   0000004A   0x.... 0x....      BL       TIM_GetITStatus
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD00A             BEQ.N    ??TIM4_IRQHandler_3
     33            {
     34              /* Clear TIM2 Capture Compare3 interrupt pending bit*/
     35              TIM_ClearITPendingBit(TIM4, TIM_IT_CC3);
   \   00000052   0x2108             MOVS     R1,#+8
   \   00000054   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   00000056   0x.... 0x....      BL       TIM_ClearITPendingBit
     36              GPIOD->ODR &= ~GPIO_Pin_14;
   \   0000005A   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c14
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF430 0x4080      BICS     R0,R0,#0x4000
   \   00000062   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40020c14
   \   00000064   0x6008             STR      R0,[R1, #+0]
   \   00000066   0xE009             B.N      ??TIM4_IRQHandler_1
     37              
     38              /* LED3 turn-off after 125 ms */
     39          //    STM_EVAL_LEDOff(LED3);
     40            }
     41            else
     42            {
     43              /* Clear TIM2 Capture Compare4 interrupt pending bit*/
     44              TIM_ClearITPendingBit(TIM4, TIM_IT_CC4);
   \                     ??TIM4_IRQHandler_3: (+1)
   \   00000068   0x2110             MOVS     R1,#+16
   \   0000006A   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000800
   \   0000006C   0x.... 0x....      BL       TIM_ClearITPendingBit
     45              GPIOD->ODR &= ~GPIO_Pin_15;
   \   00000070   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020c14
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   00000078   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40020c14
   \   0000007A   0x6008             STR      R0,[R1, #+0]
     46              /* LED4 turn-off after 62.5 ms */
     47          //    STM_EVAL_LEDOff(LED4);
     48            }
     49          }
   \                     ??TIM4_IRQHandler_1: (+1)
   \   0000007C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     TimingDelay

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40000800         DC32     0x40000800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40020C14         DC32     0x40020c14

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SysTick_Handler
       8   TIM4_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetITStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
      20  SysTick_Handler
     126  TIM4_IRQHandler
       4  TimingDelay

 
   4 bytes in section .bss
 158 bytes in section .text
 
 158 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
