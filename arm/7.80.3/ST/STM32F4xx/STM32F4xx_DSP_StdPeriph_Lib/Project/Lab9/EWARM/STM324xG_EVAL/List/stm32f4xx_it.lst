###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       27/Mar/2017  18:49:46
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\stm32f4xx_it.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\stm32f4xx_it.c
      1          #include "stm32f4xx_it.h"
      2          #include "main.h"
      3          

   \                                 In section .bss, align 4
      4          __IO uint32_t TimingDelay;
   \                     TimingDelay:
   \   00000000                      DS8 4
      5          

   \                                 In section .bss, align 2
      6          __IO uint16_t sigLevel = 0;
   \                     sigLevel:
   \   00000000                      DS8 2
      7          

   \                                 In section .bss, align 2
      8          __IO uint16_t uhIC2ReadValue1 = 0;
   \                     uhIC2ReadValue1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      9          __IO uint16_t uhIC2ReadValue2 = 0;
   \                     uhIC2ReadValue2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     10          __IO uint16_t uhIC2ReadValue3 = 0;
   \                     uhIC2ReadValue3:
   \   00000000                      DS8 2
     11          

   \                                 In section .bss, align 2
     12          __IO uint16_t uhCaptureNumber = 0;
   \                     uhCaptureNumber:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     13          __IO uint32_t uwCapture = 0;
   \                     uwCapture:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          __IO uint32_t uwCapture2 = 0;
   \                     uwCapture2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     15          __IO uint32_t uwTIM5Freq = 0;
   \                     uwTIM5Freq:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          __IO uint32_t uwTIM5Period = 0;
   \                     uwTIM5Period:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          __IO uint32_t uwTIM5Duty = 0;
   \                     uwTIM5Duty:
   \   00000000                      DS8 4
     18          
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void SysTick_Handler(void)
     21          {
     22            if (TimingDelay !=0) 
   \                     SysTick_Handler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD004             BEQ.N    ??SysTick_Handler_0
     23            {
     24              TimingDelay--;
   \   00000008   0x....             LDR.N    R0,??DataTable1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x6008             STR      R0,[R1, #+0]
     25            }
     26          }
   \                     ??SysTick_Handler_0: (+1)
   \   00000012   0x4770             BX       LR               ;; return
     27          

   \                                 In section .text, align 2, keep-with-next
     28          void TIM2_IRQHandler(void){
   \                     TIM2_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     29            if (TIM_GetITStatus(TIM2, TIM_IT_CC2) != RESET){
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000008   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD004             BEQ.N    ??TIM2_IRQHandler_0
     30              TIM_ClearITPendingBit(TIM2, TIM_IT_CC2);
   \   00000010   0x2104             MOVS     R1,#+4
   \   00000012   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000016   0x.... 0x....      BL       TIM_ClearITPendingBit
     31            }
     32          }
   \                     ??TIM2_IRQHandler_0: (+1)
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
     33          

   \                                 In section .bss, align 1
     34          char state = 0;
   \                     state:
   \   00000000                      DS8 1
     35          extern __IO uint16_t startCapture;
     36          extern __IO uint16_t stopCapture;
     37          extern __IO uint16_t pulseWidth;
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void TIM5_IRQHandler(void){  
   \                     TIM5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     40            if (TIM_GetITStatus(TIM5, TIM_IT_CC3) != RESET){
   \   00000002   0x2108             MOVS     R1,#+8
   \   00000004   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000006   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD029             BEQ.N    ??TIM5_IRQHandler_0
     41              
     42              /* Check the signal level, only measure when starting with a peak */  
     43              sigLevel = (GPIOA->IDR & 0x04) >> 2;   
   \   0000000E   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020010
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable1_3
   \   00000018   0x8008             STRH     R0,[R1, #+0]
     44              
     45              switch(state) {
   \   0000001A   0x....             LDR.N    R0,??DataTable1_4
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD002             BEQ.N    ??TIM5_IRQHandler_1
   \   00000022   0x2801             CMP      R0,#+1
   \   00000024   0xD00D             BEQ.N    ??TIM5_IRQHandler_2
   \   00000026   0xE018             B.N      ??TIM5_IRQHandler_3
     46              case 0:
     47                //low to high
     48                if ( GPIOA->IDR & GPIO_Pin_2 ) {
   \                     ??TIM5_IRQHandler_1: (+1)
   \   00000028   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020010
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x0740             LSLS     R0,R0,#+29
   \   0000002E   0xD507             BPL.N    ??TIM5_IRQHandler_4
     49                  startCapture = TIM_GetCapture3(TIM5);
   \   00000030   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000032   0x.... 0x....      BL       TIM_GetCapture3
   \   00000036   0x....             LDR.N    R1,??DataTable1_5
   \   00000038   0x8008             STRH     R0,[R1, #+0]
     50                  state = 1;
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x....             LDR.N    R1,??DataTable1_4
   \   0000003E   0x7008             STRB     R0,[R1, #+0]
     51                }
     52                break;
   \                     ??TIM5_IRQHandler_4: (+1)
   \   00000040   0xE00B             B.N      ??TIM5_IRQHandler_3
     53              case 1:
     54                //high to low
     55                if ( !( GPIOA->IDR & GPIO_Pin_2 ) ) {
   \                     ??TIM5_IRQHandler_2: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020010
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x0740             LSLS     R0,R0,#+29
   \   00000048   0xD407             BMI.N    ??TIM5_IRQHandler_5
     56                  stopCapture = TIM_GetCapture3(TIM5);
   \   0000004A   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   0000004C   0x.... 0x....      BL       TIM_GetCapture3
   \   00000050   0x....             LDR.N    R1,??DataTable1_6
   \   00000052   0x8008             STRH     R0,[R1, #+0]
     57                  state = 0;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x....             LDR.N    R1,??DataTable1_4
   \   00000058   0x7008             STRB     R0,[R1, #+0]
     58                }
     59                break;
     60              }
     61              /**
     62              if ((uhCaptureNumber == 0) & (sigLevel == 1))
     63              {    
     64                uhIC2ReadValue1 = TIM_GetCapture3(TIM5);
     65                uhCaptureNumber = 1;
     66              } 
     67              
     68              else if(uhCaptureNumber == 1)
     69              {
     70                uhIC2ReadValue2 = TIM_GetCapture3(TIM5); 
     71                uhCaptureNumber = 2;
     72              }
     73              
     74              
     75              else if (uhCaptureNumber == 2)
     76              {     
     77                uhIC2ReadValue3 = TIM_GetCapture3(TIM5); 
     78                
     79                if (uhIC2ReadValue2 > uhIC2ReadValue1)
     80                {
     81                  uwCapture = (uhIC2ReadValue2 - uhIC2ReadValue1); 
     82                }
     83                else if (uhIC2ReadValue2 < uhIC2ReadValue1)
     84                {
     85                  uwCapture = ((0xFFFF - uhIC2ReadValue1) + uhIC2ReadValue2); 
     86                }
     87                else
     88                {
     89                  uwCapture = 0;
     90                }
     91                
     92                if (uhIC2ReadValue3 > uhIC2ReadValue2)
     93                {
     94                  uwCapture2 = (uhIC2ReadValue3 - uhIC2ReadValue2); 
     95                }
     96                else if (uhIC2ReadValue3 < uhIC2ReadValue2)
     97                {
     98                  uwCapture2 = ((0xFFFF - uhIC2ReadValue2) + uhIC2ReadValue3); 
     99                }
    100                else
    101                {
    102                  uwCapture2 = 0;
    103                }
    104                
    105                uwTIM5Period = 2 * 84 *(uwCapture + uwCapture2) / (SystemCoreClock / 1000000);
    106                
    107                uwTIM5Duty = (uwCapture * 100) / (uwCapture + uwCapture2);
    108                
    109                uwTIM5Freq = (uint32_t) SystemCoreClock / (84 * 2 * (uwCapture + uwCapture2)) - 1;
    110                
    111                uhCaptureNumber = 0; 
    112              }    
    113              **/
    114              TIM_ClearITPendingBit(TIM5, TIM_IT_CC3);
   \                     ??TIM5_IRQHandler_5: (+1)
   \                     ??TIM5_IRQHandler_3: (+1)
   \   0000005A   0x2108             MOVS     R1,#+8
   \   0000005C   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   0000005E   0x.... 0x....      BL       TIM_ClearITPendingBit
    115            }
    116          }
   \                     ??TIM5_IRQHandler_0: (+1)
   \   00000062   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     TimingDelay

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40000C00         DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40020010         DC32     0x40020010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     sigLevel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     startCapture

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     stopCapture

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SysTick_Handler
       8   TIM2_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetITStatus
       8   TIM5_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetCapture3
         8   -> TIM_GetITStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      20  SysTick_Handler
      28  TIM2_IRQHandler
     100  TIM5_IRQHandler
       4  TimingDelay
       2  sigLevel
       1  state
       2  uhCaptureNumber
       2  uhIC2ReadValue1
       2  uhIC2ReadValue2
       2  uhIC2ReadValue3
       4  uwCapture
       4  uwCapture2
       4  uwTIM5Duty
       4  uwTIM5Freq
       4  uwTIM5Period

 
  35 bytes in section .bss
 176 bytes in section .text
 
 176 bytes of CODE memory
  35 bytes of DATA memory

Errors: none
Warnings: none
