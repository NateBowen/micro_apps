###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       27/Mar/2017  16:26:32
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\sr4.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\sr4.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List\sr4.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj\sr4.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\sr4.c
      1          #include "sr4.h"
      2          
      3          //#define 
      4          

   \                                 In section .text, align 2, keep-with-next
      5          void SR4_Config(void){
   \                     SR4_Config: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            SR4_EchoConfig();
   \   00000002   0x.... 0x....      BL       SR4_EchoConfig
      7            SR4_TriggerConfig(); 
   \   00000006   0x.... 0x....      BL       SR4_TriggerConfig
      8          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
      9          

   \                                 In section .text, align 2, keep-with-next
     10          void SR4_EchoConfig(void){
   \                     SR4_EchoConfig: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     11            TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
     12            TIM_ICInitTypeDef  TIM_ICInitStructure;
     13            NVIC_InitTypeDef NVIC_InitStructure;
     14            GPIO_InitTypeDef GPIO_InitStructure;
     15            
     16            /* TIM2 clock enable */
     17            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2008             MOVS     R0,#+8
   \   00000008   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     18            
     19            /* GPIOA clock enable */
     20            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     21            
     22            /* GPIOA Configuration: TIM2 CH2 (PA1), TIM2 CH2 (PA2) */
     23            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
   \   00000014   0x2004             MOVS     R0,#+4
   \   00000016   0x9001             STR      R0,[SP, #+4]
     24            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0xF88D 0x0008      STRB     R0,[SP, #+8]
     25            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x000B      STRB     R0,[SP, #+11]
     26            GPIO_Init(GPIOA, &GPIO_InitStructure); 
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   00000028   0x.... 0x....      BL       GPIO_Init
     27            
     28            /* Connect TIM Channels to AF1 */
     29            GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_TIM5);
   \   0000002C   0x2202             MOVS     R2,#+2
   \   0000002E   0x2102             MOVS     R1,#+2
   \   00000030   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   00000032   0x.... 0x....      BL       GPIO_PinAFConfig
     30            
     31            /* Enable the TIM2 Interrupt */
     32            NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;
   \   00000036   0x2032             MOVS     R0,#+50
   \   00000038   0xF88D 0x0000      STRB     R0,[SP, #+0]
     33            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xF88D 0x0001      STRB     R0,[SP, #+1]
     34            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0xF88D 0x0002      STRB     R0,[SP, #+2]
     35            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0xF88D 0x0003      STRB     R0,[SP, #+3]
     36            NVIC_Init(&NVIC_InitStructure);  
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x.... 0x....      BL       NVIC_Init
     37              
     38          //  uint16_t pulseDuration = 14;
     39            uint16_t uhPrescalerValue = 84;
   \   00000054   0x2054             MOVS     R0,#+84
     40            
     41            /* Time base configuration */
     42            TIM_TimeBaseStructure.TIM_Period = 65535;
   \   00000056   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000005A   0x9107             STR      R1,[SP, #+28]
     43            TIM_TimeBaseStructure.TIM_Prescaler = uhPrescalerValue;
   \   0000005C   0xF8AD 0x0018      STRH     R0,[SP, #+24]
     44            TIM_TimeBaseStructure.TIM_ClockDivision = 0;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0xF8AD 0x0020      STRH     R0,[SP, #+32]
     45            TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0xF8AD 0x001A      STRH     R0,[SP, #+26]
     46            TIM_TimeBaseInit(TIM5, &TIM_TimeBaseStructure);
   \   0000006C   0xA906             ADD      R1,SP,#+24
   \   0000006E   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000070   0x.... 0x....      BL       TIM_TimeBaseInit
     47            
     48            TIM_ICInitStructure.TIM_Channel = TIM_Channel_3;
   \   00000074   0x2008             MOVS     R0,#+8
   \   00000076   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     49            TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_BothEdge;
   \   0000007A   0x200A             MOVS     R0,#+10
   \   0000007C   0xF8AD 0x000E      STRH     R0,[SP, #+14]
     50            TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0xF8AD 0x0010      STRH     R0,[SP, #+16]
     51            TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0xF8AD 0x0012      STRH     R0,[SP, #+18]
     52            TIM_ICInitStructure.TIM_ICFilter = 0x0;
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0xF8AD 0x0014      STRH     R0,[SP, #+20]
     53            TIM_ICInit(TIM5, &TIM_ICInitStructure);
   \   00000092   0xA903             ADD      R1,SP,#+12
   \   00000094   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000096   0x.... 0x....      BL       TIM_ICInit
     54            
     55            TIM_ARRPreloadConfig(TIM5, ENABLE);
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   0000009E   0x.... 0x....      BL       TIM_ARRPreloadConfig
     56            
     57            /* TIM IT enable */
     58            TIM_ITConfig(TIM5, TIM_IT_CC3, ENABLE);
   \   000000A2   0x2201             MOVS     R2,#+1
   \   000000A4   0x2108             MOVS     R1,#+8
   \   000000A6   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   000000A8   0x.... 0x....      BL       TIM_ITConfig
     59            
     60            /* TIM2 enable counter */
     61            TIM_Cmd(TIM5, ENABLE);
   \   000000AC   0x2101             MOVS     R1,#+1
   \   000000AE   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   000000B0   0x.... 0x....      BL       TIM_Cmd
     62          }
   \   000000B4   0xB009             ADD      SP,SP,#+36
   \   000000B6   0xBD00             POP      {PC}             ;; return
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void SR4_TriggerConfig(void){
   \                     SR4_TriggerConfig: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
     65            
     66            TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
     67            TIM_OCInitTypeDef  TIM_OCInitStructure;
     68            NVIC_InitTypeDef NVIC_InitStructure;
     69            GPIO_InitTypeDef GPIO_InitStructure;
     70            
     71            /* TIM2 clock enable */
     72            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     73            
     74            /* GPIOA clock enable */
     75            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     76            
     77            /* GPIOC Configuration: TIM2 CH1 (PA0), TIM2 CH2 (PA1), TIM2 CH2 (PA2) and TIM2 CH4 (PA3) */
     78            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x9001             STR      R0,[SP, #+4]
     79            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0xF88D 0x0008      STRB     R0,[SP, #+8]
     80            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0xF88D 0x0009      STRB     R0,[SP, #+9]
     81            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xF88D 0x000A      STRB     R0,[SP, #+10]
     82            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xF88D 0x000B      STRB     R0,[SP, #+11]
     83            GPIO_Init(GPIOA, &GPIO_InitStructure); 
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   00000034   0x.... 0x....      BL       GPIO_Init
     84            
     85            /* Connect TIM Channels to AF1 */
     86            GPIO_PinAFConfig(GPIOA, GPIO_PinSource1, GPIO_AF_TIM2);
   \   00000038   0x2201             MOVS     R2,#+1
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x....             LDR.N    R0,??DataTable1  ;; 0x40020000
   \   0000003E   0x.... 0x....      BL       GPIO_PinAFConfig
     87            
     88            /* Enable the TIM2 Interrupt */
     89            NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
   \   00000042   0x201C             MOVS     R0,#+28
   \   00000044   0xF88D 0x0000      STRB     R0,[SP, #+0]
     90            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0xF88D 0x0001      STRB     R0,[SP, #+1]
     91            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0xF88D 0x0002      STRB     R0,[SP, #+2]
     92            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0xF88D 0x0003      STRB     R0,[SP, #+3]
     93            NVIC_Init(&NVIC_InitStructure);  
   \   0000005A   0x4668             MOV      R0,SP
   \   0000005C   0x.... 0x....      BL       NVIC_Init
     94            
     95            
     96            uint16_t pulseDuration = 14;
   \   00000060   0x240E             MOVS     R4,#+14
     97            uint16_t uhPrescalerValue = 84;
   \   00000062   0x2054             MOVS     R0,#+84
     98            
     99            /* Time base configuration */
    100            TIM_TimeBaseStructure.TIM_Period = 50000;
   \   00000064   0xF24C 0x3150      MOVW     R1,#+50000
   \   00000068   0x9104             STR      R1,[SP, #+16]
    101            TIM_TimeBaseStructure.TIM_Prescaler = uhPrescalerValue;
   \   0000006A   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    102            TIM_TimeBaseStructure.TIM_ClockDivision = 0;
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0xF8AD 0x0014      STRH     R0,[SP, #+20]
    103            TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    104            TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
   \   0000007A   0xA903             ADD      R1,SP,#+12
   \   0000007C   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000080   0x.... 0x....      BL       TIM_TimeBaseInit
    105            
    106            /* Output Compare Active Mode configuration: Channel1 */
    107            TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
   \   00000084   0x2060             MOVS     R0,#+96
   \   00000086   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    108            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
   \   0000008A   0x2001             MOVS     R0,#+1
   \   0000008C   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    109            TIM_OCInitStructure.TIM_Pulse = pulseDuration;
   \   00000090   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000092   0x9408             STR      R4,[SP, #+32]
    110            TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0xF8AD 0x0024      STRH     R0,[SP, #+36]
    111            TIM_OC2Init(TIM2, &TIM_OCInitStructure);
   \   0000009A   0xA906             ADD      R1,SP,#+24
   \   0000009C   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000A0   0x.... 0x....      BL       TIM_OC2Init
    112            
    113            TIM_OC2PreloadConfig(TIM2, TIM_OCPreload_Disable);
   \   000000A4   0x2100             MOVS     R1,#+0
   \   000000A6   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000AA   0x.... 0x....      BL       TIM_OC2PreloadConfig
    114            TIM_ARRPreloadConfig(TIM2, ENABLE);
   \   000000AE   0x2101             MOVS     R1,#+1
   \   000000B0   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000B4   0x.... 0x....      BL       TIM_ARRPreloadConfig
    115            
    116            /* TIM IT enable */
    117            TIM_ITConfig(TIM2, TIM_IT_CC2, ENABLE);
   \   000000B8   0x2201             MOVS     R2,#+1
   \   000000BA   0x2104             MOVS     R1,#+4
   \   000000BC   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000C0   0x.... 0x....      BL       TIM_ITConfig
    118            
    119            /* TIM2 enable counter */
    120            TIM_Cmd(TIM2, ENABLE);
   \   000000C4   0x2101             MOVS     R1,#+1
   \   000000C6   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000000CA   0x.... 0x....      BL       TIM_Cmd
    121          }
   \   000000CE   0xB00C             ADD      SP,SP,#+48
   \   000000D0   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40000C00         DC32     0x40000c00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SR4_Config
         8   -> SR4_EchoConfig
         8   -> SR4_TriggerConfig
      40   SR4_EchoConfig
        40   -> GPIO_Init
        40   -> GPIO_PinAFConfig
        40   -> NVIC_Init
        40   -> RCC_AHB1PeriphClockCmd
        40   -> RCC_APB1PeriphClockCmd
        40   -> TIM_ARRPreloadConfig
        40   -> TIM_Cmd
        40   -> TIM_ICInit
        40   -> TIM_ITConfig
        40   -> TIM_TimeBaseInit
      56   SR4_TriggerConfig
        56   -> GPIO_Init
        56   -> GPIO_PinAFConfig
        56   -> NVIC_Init
        56   -> RCC_AHB1PeriphClockCmd
        56   -> RCC_APB1PeriphClockCmd
        56   -> TIM_ARRPreloadConfig
        56   -> TIM_Cmd
        56   -> TIM_ITConfig
        56   -> TIM_OC2Init
        56   -> TIM_OC2PreloadConfig
        56   -> TIM_TimeBaseInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      12  SR4_Config
     184  SR4_EchoConfig
     210  SR4_TriggerConfig

 
 414 bytes in section .text
 
 414 bytes of CODE memory

Errors: none
Warnings: none
