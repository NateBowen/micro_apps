###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       26/Mar/2017  22:01:11
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\main.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab9\main.c
      1          #include "main.h"
      2          #include "task1.h"
      3          #include "task2.h"
      4          #include "task3.h"
      5          
      6          //int main(void)
      7          //{ 
      8            //Each of the following funtions contains an infinite loop.
      9          //  task1();
     10          //  task2();
     11          //  task3();
     12            
     13            
     14            

   \                                 In section .bss, align 4
     15          TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
   \                     TIM_TimeBaseStructure:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     16          TIM_OCInitTypeDef  TIM_OCInitStructure;
   \                     TIM_OCInitStructure:
   \   00000000                      DS8 20
     17          

   \                                 In section .data, align 2
     18          uint16_t uhCCR1_Val = 30000;
   \                     uhCCR1_Val:
   \   00000000   0x7530             DC16 30000

   \                                 In section .data, align 2
     19          uint16_t uhCCR2_Val = 15000;
   \                     uhCCR2_Val:
   \   00000000   0x3A98             DC16 15000

   \                                 In section .data, align 2
     20          uint16_t uhCCR3_Val = 7500;
   \                     uhCCR3_Val:
   \   00000000   0x1D4C             DC16 7500

   \                                 In section .data, align 2
     21          uint16_t uhCCR4_Val = 3750;
   \                     uhCCR4_Val:
   \   00000000   0x0EA6             DC16 3750

   \                                 In section .bss, align 2
     22          uint16_t uhPrescalerValue = 0;
   \                     uhPrescalerValue:
   \   00000000                      DS8 2
     23          
     24          /* Private function prototypes -----------------------------------------------*/
     25          static void TIM_Config(void);
     26          
     27          /* Private functions ---------------------------------------------------------*/
     28          
     29          /**
     30            * @brief  Main program
     31            * @param  None
     32            * @retval None
     33            */

   \                                 In section .text, align 2, keep-with-next
     34          int main(void)
     35          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     36            /*!< At this stage the microcontroller clock setting is already configured, 
     37                 this is done through SystemInit() function which is called from startup
     38                 files (startup_stm32f40xx.s/startup_stm32f427x.s) before to branch to 
     39                 application main. 
     40                 To reconfigure the default setting of SystemInit() function, refer to
     41                 system_stm32f4xx.c file
     42               */
     43          
     44            /* TIM Configuration */
     45            TIM_Config();
   \   00000002   0x.... 0x....      BL       TIM_Config
     46            
     47            /* ---------------------------------------------------------------
     48              TIM2 Configuration: Output Compare Inactive Mode:
     49              In this example TIM2 input clock (TIM2CLK) is set to 2 * APB1 clock (PCLK1), 
     50              since APB1 prescaler is different from 1.   
     51                TIM2CLK = 2 * PCLK1  
     52                PCLK1 = HCLK / 4 
     53                => TIM2CLK = HCLK / 2 = SystemCoreClock /2
     54                    
     55              To get TIM2 counter clock at 2 KHz, the prescaler is computed as follows:
     56                 Prescaler = (TIM2CLK / TIM2 counter clock) - 1
     57                 Prescaler = ((SystemCoreClock /2) /2 KHz) - 1
     58                 
     59              Generate 4 signals with 4 different delays:
     60                 TIM2_CH1 delay = uhCCR1_Val/TIM2 counter clock = 500 ms
     61                 TIM2_CH2 delay = uhCCR2_Val/TIM2 counter clock = 250 ms
     62                 TIM2_CH3 delay = uhCCR3_Val/TIM2 counter clock = 125 ms
     63                 TIM2_CH4 delay = uhCCR4_Val/TIM2 counter clock = 62.5 ms
     64          
     65              Note: 
     66               SystemCoreClock variable holds HCLK frequency and is defined in system_stm32f4xx.c file.
     67               Each time the core clock (HCLK) changes, user had to call SystemCoreClockUpdate()
     68               function to update SystemCoreClock variable value. Otherwise, any configuration
     69               based on this variable will be incorrect. 
     70               
     71            --------------------------------------------------------------- */
     72            /* Compute the prescaler value */
     73            uhPrescalerValue = (uint16_t) ((SystemCoreClock / 2) / 2000) - 1;
   \   00000006   0x....             LDR.N    R0,??DataTable1
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0840             LSRS     R0,R0,#+1
   \   0000000C   0xF44F 0x61FA      MOV      R1,#+2000
   \   00000010   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000014   0x1E40             SUBS     R0,R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable1_1
   \   00000018   0x8008             STRH     R0,[R1, #+0]
     74          //  uhPrescalerValue = 0;
     75          
     76            /* Time base configuration */
     77            TIM_TimeBaseStructure.TIM_Period = 65535;
   \   0000001A   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000001E   0x....             LDR.N    R1,??DataTable1_2
   \   00000020   0x6048             STR      R0,[R1, #+4]
     78            TIM_TimeBaseStructure.TIM_Prescaler = uhPrescalerValue;
   \   00000022   0x....             LDR.N    R0,??DataTable1_1
   \   00000024   0x8800             LDRH     R0,[R0, #+0]
   \   00000026   0x....             LDR.N    R1,??DataTable1_2
   \   00000028   0x8008             STRH     R0,[R1, #+0]
     79            TIM_TimeBaseStructure.TIM_ClockDivision = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable1_2
   \   0000002E   0x8108             STRH     R0,[R1, #+8]
     80            TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable1_2
   \   00000034   0x8048             STRH     R0,[R1, #+2]
     81          
     82            TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
   \   00000036   0x....             LDR.N    R1,??DataTable1_2
   \   00000038   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   0000003A   0x.... 0x....      BL       TIM_TimeBaseInit
     83          
     84            /* Output Compare Active Mode configuration: Channel1 */
     85            TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
   \   0000003E   0x2030             MOVS     R0,#+48
   \   00000040   0x....             LDR.N    R1,??DataTable1_4
   \   00000042   0x8008             STRH     R0,[R1, #+0]
     86            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x....             LDR.N    R1,??DataTable1_4
   \   00000048   0x8048             STRH     R0,[R1, #+2]
     87            TIM_OCInitStructure.TIM_Pulse = uhCCR1_Val;
   \   0000004A   0x....             LDR.N    R0,??DataTable1_5
   \   0000004C   0x8800             LDRH     R0,[R0, #+0]
   \   0000004E   0x....             LDR.N    R1,??DataTable1_4
   \   00000050   0x6088             STR      R0,[R1, #+8]
     88            TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x....             LDR.N    R1,??DataTable1_4
   \   00000056   0x8188             STRH     R0,[R1, #+12]
     89          
     90            TIM_OC1Init(TIM4, &TIM_OCInitStructure);
   \   00000058   0x....             LDR.N    R1,??DataTable1_4
   \   0000005A   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   0000005C   0x.... 0x....      BL       TIM_OC1Init
     91          
     92            TIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Disable);
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   00000064   0x.... 0x....      BL       TIM_OC1PreloadConfig
     93          
     94            /* Output Compare Active Mode configuration: Channel2 */
     95            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x....             LDR.N    R1,??DataTable1_4
   \   0000006C   0x8048             STRH     R0,[R1, #+2]
     96            TIM_OCInitStructure.TIM_Pulse = uhCCR2_Val;
   \   0000006E   0x....             LDR.N    R0,??DataTable1_6
   \   00000070   0x8800             LDRH     R0,[R0, #+0]
   \   00000072   0x....             LDR.N    R1,??DataTable1_4
   \   00000074   0x6088             STR      R0,[R1, #+8]
     97          
     98            TIM_OC2Init(TIM4, &TIM_OCInitStructure);
   \   00000076   0x....             LDR.N    R1,??DataTable1_4
   \   00000078   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   0000007A   0x.... 0x....      BL       TIM_OC2Init
     99          
    100            TIM_OC2PreloadConfig(TIM4, TIM_OCPreload_Disable);
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   00000082   0x.... 0x....      BL       TIM_OC2PreloadConfig
    101          
    102            /* Output Compare Active Mode configuration: Channel3 */
    103            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x....             LDR.N    R1,??DataTable1_4
   \   0000008A   0x8048             STRH     R0,[R1, #+2]
    104            TIM_OCInitStructure.TIM_Pulse = uhCCR3_Val;
   \   0000008C   0x....             LDR.N    R0,??DataTable1_7
   \   0000008E   0x8800             LDRH     R0,[R0, #+0]
   \   00000090   0x....             LDR.N    R1,??DataTable1_4
   \   00000092   0x6088             STR      R0,[R1, #+8]
    105          
    106            TIM_OC3Init(TIM4, &TIM_OCInitStructure);
   \   00000094   0x....             LDR.N    R1,??DataTable1_4
   \   00000096   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   00000098   0x.... 0x....      BL       TIM_OC3Init
    107          
    108            TIM_OC3PreloadConfig(TIM4, TIM_OCPreload_Disable);
   \   0000009C   0x2100             MOVS     R1,#+0
   \   0000009E   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   000000A0   0x.... 0x....      BL       TIM_OC3PreloadConfig
    109          
    110            /* Output Compare Active Mode configuration: Channel4 */
    111            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0x....             LDR.N    R1,??DataTable1_4
   \   000000A8   0x8048             STRH     R0,[R1, #+2]
    112            TIM_OCInitStructure.TIM_Pulse = uhCCR4_Val;
   \   000000AA   0x....             LDR.N    R0,??DataTable1_8
   \   000000AC   0x8800             LDRH     R0,[R0, #+0]
   \   000000AE   0x....             LDR.N    R1,??DataTable1_4
   \   000000B0   0x6088             STR      R0,[R1, #+8]
    113          
    114            TIM_OC4Init(TIM4, &TIM_OCInitStructure);
   \   000000B2   0x....             LDR.N    R1,??DataTable1_4
   \   000000B4   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   000000B6   0x.... 0x....      BL       TIM_OC4Init
    115          
    116            TIM_OC4PreloadConfig(TIM4, TIM_OCPreload_Disable);
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   000000BE   0x.... 0x....      BL       TIM_OC4PreloadConfig
    117          
    118            TIM_ARRPreloadConfig(TIM4, ENABLE);
   \   000000C2   0x2101             MOVS     R1,#+1
   \   000000C4   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   000000C6   0x.... 0x....      BL       TIM_ARRPreloadConfig
    119            
    120          //  /* Turn on LED1, LED2, LED3 and LED4 */
    121          //  STM_EVAL_LEDOn(LED1);
    122          //  STM_EVAL_LEDOn(LED2);
    123          //  STM_EVAL_LEDOn(LED3);
    124          //  STM_EVAL_LEDOn(LED4);
    125          
    126            /* TIM IT enable */
    127            TIM_ITConfig(TIM4, TIM_IT_CC1 | TIM_IT_CC2 | TIM_IT_CC3 | TIM_IT_CC4, ENABLE);
   \   000000CA   0x2201             MOVS     R2,#+1
   \   000000CC   0x211E             MOVS     R1,#+30
   \   000000CE   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   000000D0   0x.... 0x....      BL       TIM_ITConfig
    128          
    129            /* TIM2 enable counter */
    130            TIM_Cmd(TIM4, ENABLE);
   \   000000D4   0x2101             MOVS     R1,#+1
   \   000000D6   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40000800
   \   000000D8   0x.... 0x....      BL       TIM_Cmd
    131          
    132            //GPIOD->ODR = 0xF000;
    133            
    134            while (1)
   \                     ??main_0: (+1)
   \   000000DC   0xE7FE             B.N      ??main_0
    135            {
    136            }
    137          }
    138          
    139          

   \                                 In section .text, align 2, keep-with-next
    140          static void TIM_Config(void)
    141          {
   \                     TIM_Config: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    142            NVIC_InitTypeDef NVIC_InitStructure;
    143             GPIO_InitTypeDef GPIO_InitStructure;
    144          
    145            /* TIM2 clock enable */
    146            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2004             MOVS     R0,#+4
   \   00000006   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
    147          
    148            /* GPIOA clock enable */
    149            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2008             MOVS     R0,#+8
   \   0000000E   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
    150             
    151            /* GPIOC Configuration: TIM2 CH1 (PA0), TIM2 CH2 (PA1), TIM2 CH2 (PA2) and TIM2 CH4 (PA3) */
    152            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
   \   00000012   0xF44F 0x4070      MOV      R0,#+61440
   \   00000016   0x9001             STR      R0,[SP, #+4]
    153            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0xF88D 0x0008      STRB     R0,[SP, #+8]
    154            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0xF88D 0x0009      STRB     R0,[SP, #+9]
    155            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xF88D 0x000A      STRB     R0,[SP, #+10]
    156            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xF88D 0x000B      STRB     R0,[SP, #+11]
    157            GPIO_Init(GPIOD, &GPIO_InitStructure); 
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40020c00
   \   00000034   0x.... 0x....      BL       GPIO_Init
    158              
    159            /* Connect TIM Channels to AF1 */
    160            GPIO_PinAFConfig(GPIOD, GPIO_PinSource12, GPIO_AF_TIM4);
   \   00000038   0x2202             MOVS     R2,#+2
   \   0000003A   0x210C             MOVS     R1,#+12
   \   0000003C   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40020c00
   \   0000003E   0x.... 0x....      BL       GPIO_PinAFConfig
    161            GPIO_PinAFConfig(GPIOD, GPIO_PinSource13, GPIO_AF_TIM4); 
   \   00000042   0x2202             MOVS     R2,#+2
   \   00000044   0x210D             MOVS     R1,#+13
   \   00000046   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40020c00
   \   00000048   0x.... 0x....      BL       GPIO_PinAFConfig
    162            GPIO_PinAFConfig(GPIOD, GPIO_PinSource14, GPIO_AF_TIM4);
   \   0000004C   0x2202             MOVS     R2,#+2
   \   0000004E   0x210E             MOVS     R1,#+14
   \   00000050   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40020c00
   \   00000052   0x.... 0x....      BL       GPIO_PinAFConfig
    163            GPIO_PinAFConfig(GPIOD, GPIO_PinSource15, GPIO_AF_TIM4);
   \   00000056   0x2202             MOVS     R2,#+2
   \   00000058   0x210F             MOVS     R1,#+15
   \   0000005A   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40020c00
   \   0000005C   0x.... 0x....      BL       GPIO_PinAFConfig
    164          
    165            /* Initialize Leds mounted on EVAL board */
    166          //  STM_EVAL_LEDInit(LED1);
    167          //  STM_EVAL_LEDInit(LED2);
    168          //  STM_EVAL_LEDInit(LED3);
    169          //  STM_EVAL_LEDInit(LED4);
    170          
    171            /* Enable the TIM2 Interrupt */
    172            NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
   \   00000060   0x201E             MOVS     R0,#+30
   \   00000062   0xF88D 0x0000      STRB     R0,[SP, #+0]
    173            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0xF88D 0x0001      STRB     R0,[SP, #+1]
    174            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0xF88D 0x0002      STRB     R0,[SP, #+2]
    175            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0xF88D 0x0003      STRB     R0,[SP, #+3]
    176            NVIC_Init(&NVIC_InitStructure);  
   \   00000078   0x4668             MOV      R0,SP
   \   0000007A   0x.... 0x....      BL       NVIC_Init
    177          }
   \   0000007E   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     uhPrescalerValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TIM_TimeBaseStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40000800         DC32     0x40000800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     TIM_OCInitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     uhCCR1_Val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     uhCCR2_Val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     uhCCR3_Val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     uhCCR4_Val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x40020C00         DC32     0x40020c00
    178          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   TIM_Config
        16   -> GPIO_Init
        16   -> GPIO_PinAFConfig
        16   -> NVIC_Init
        16   -> RCC_AHB1PeriphClockCmd
        16   -> RCC_APB1PeriphClockCmd
       8   main
         8   -> TIM_ARRPreloadConfig
         8   -> TIM_Cmd
         8   -> TIM_Config
         8   -> TIM_ITConfig
         8   -> TIM_OC1Init
         8   -> TIM_OC1PreloadConfig
         8   -> TIM_OC2Init
         8   -> TIM_OC2PreloadConfig
         8   -> TIM_OC3Init
         8   -> TIM_OC3PreloadConfig
         8   -> TIM_OC4Init
         8   -> TIM_OC4PreloadConfig
         8   -> TIM_TimeBaseInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
     128  TIM_Config
      20  TIM_OCInitStructure
      12  TIM_TimeBaseStructure
     222  main
       2  uhCCR1_Val
       2  uhCCR2_Val
       2  uhCCR3_Val
       2  uhCCR4_Val
       2  uhPrescalerValue

 
  34 bytes in section .bss
   8 bytes in section .data
 390 bytes in section .text
 
 390 bytes of CODE memory
  42 bytes of DATA memory

Errors: none
Warnings: none
