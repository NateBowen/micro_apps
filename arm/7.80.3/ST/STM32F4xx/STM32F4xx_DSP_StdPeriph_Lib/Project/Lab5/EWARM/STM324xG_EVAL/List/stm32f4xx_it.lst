###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       20/Feb/2017  16:08:25
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\stm32f4xx_it.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\stm32f4xx_it.c
      1          #include "stm32f4xx_it.h"
      2          

   \                                 In section .bss, align 2
      3          __IO uint16_t uhIC2ReadValue1 = 0;
   \                     uhIC2ReadValue1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      4          __IO uint16_t uhIC2ReadValue2 = 0;
   \                     uhIC2ReadValue2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      5          __IO uint16_t uhCaptureNumber = 0;
   \                     uhCaptureNumber:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
      6          __IO uint32_t uwCapture = 0;
   \                     uwCapture:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      7          __IO uint32_t uwTIM5Freq = 0;
   \                     uwTIM5Freq:
   \   00000000                      DS8 4
      8          

   \                                 In section .text, align 4, keep-with-next
      9          void TIM5_IRQHandler(void)
     10          { 
   \                     TIM5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     11            if(TIM_GetITStatus(TIM5, TIM_IT_CC2) == SET) 
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x4828             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   00000006   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD14B             BNE.N    ??TIM5_IRQHandler_1
     12            {
     13              /* Clear TIM2 Capture compare interrupt pending bit */
     14              TIM_ClearITPendingBit(TIM5, TIM_IT_CC2);
   \   0000000E   0x2104             MOVS     R1,#+4
   \   00000010   0x4825             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   00000012   0x.... 0x....      BL       TIM_ClearITPendingBit
     15          
     16              if(uhCaptureNumber == 0)
   \   00000016   0x4825             LDR.N    R0,??TIM5_IRQHandler_0+0x4
   \   00000018   0x8800             LDRH     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD108             BNE.N    ??TIM5_IRQHandler_2
     17              {
     18                /* Get the Input Capture value */
     19                uhIC2ReadValue1 = TIM_GetCapture2(TIM5);
   \   0000001E   0x4822             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   00000020   0x.... 0x....      BL       TIM_GetCapture2
   \   00000024   0x4922             LDR.N    R1,??TIM5_IRQHandler_0+0x8
   \   00000026   0x8008             STRH     R0,[R1, #+0]
     20                uhCaptureNumber = 1;
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x4920             LDR.N    R1,??TIM5_IRQHandler_0+0x4
   \   0000002C   0x8008             STRH     R0,[R1, #+0]
   \   0000002E   0xE03A             B.N      ??TIM5_IRQHandler_1
     21              }
     22              
     23              else if(uhCaptureNumber == 1)
   \                     ??TIM5_IRQHandler_2: (+1)
   \   00000030   0x481E             LDR.N    R0,??TIM5_IRQHandler_0+0x4
   \   00000032   0x8800             LDRH     R0,[R0, #+0]
   \   00000034   0x2801             CMP      R0,#+1
   \   00000036   0xD136             BNE.N    ??TIM5_IRQHandler_1
     24              {
     25                /* Get the Input Capture value */
     26                uhIC2ReadValue2 = TIM_GetCapture2(TIM5); 
   \   00000038   0x481B             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   0000003A   0x.... 0x....      BL       TIM_GetCapture2
   \   0000003E   0x491D             LDR.N    R1,??TIM5_IRQHandler_0+0xC
   \   00000040   0x8008             STRH     R0,[R1, #+0]
     27                
     28                /* Capture computation */
     29                if (uhIC2ReadValue2 > uhIC2ReadValue1)
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   00000042   0x481B             LDR.N    R0,??TIM5_IRQHandler_0+0x8
   \   00000044   0x8800             LDRH     R0,[R0, #+0]
   \   00000046   0x491B             LDR.N    R1,??TIM5_IRQHandler_0+0xC
   \   00000048   0x8809             LDRH     R1,[R1, #+0]
   \   0000004A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004C   0x4288             CMP      R0,R1
   \   0000004E   0xD208             BCS.N    ??TIM5_IRQHandler_3
     30                {
     31                  uwCapture = (uhIC2ReadValue2 - uhIC2ReadValue1); 
                         ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   00000050   0x4818             LDR.N    R0,??TIM5_IRQHandler_0+0xC
   \   00000052   0x8800             LDRH     R0,[R0, #+0]
   \   00000054   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000056   0x4916             LDR.N    R1,??TIM5_IRQHandler_0+0x8
   \   00000058   0x8809             LDRH     R1,[R1, #+0]
   \   0000005A   0x1A40             SUBS     R0,R0,R1
   \   0000005C   0x4916             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0xE015             B.N      ??TIM5_IRQHandler_4
     32                }
     33                else if (uhIC2ReadValue2 < uhIC2ReadValue1)
                            ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \                     ??TIM5_IRQHandler_3: (+1)
   \   00000062   0x4814             LDR.N    R0,??TIM5_IRQHandler_0+0xC
   \   00000064   0x8800             LDRH     R0,[R0, #+0]
   \   00000066   0x4912             LDR.N    R1,??TIM5_IRQHandler_0+0x8
   \   00000068   0x8809             LDRH     R1,[R1, #+0]
   \   0000006A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006C   0x4288             CMP      R0,R1
   \   0000006E   0xD20B             BCS.N    ??TIM5_IRQHandler_5
     34                {
     35                  uwCapture = ((0xFFFF - uhIC2ReadValue1) + uhIC2ReadValue2); 
                         ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   00000070   0x480F             LDR.N    R0,??TIM5_IRQHandler_0+0x8
   \   00000072   0x8800             LDRH     R0,[R0, #+0]
   \   00000074   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000078   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007A   0x1A08             SUBS     R0,R1,R0
   \   0000007C   0x490D             LDR.N    R1,??TIM5_IRQHandler_0+0xC
   \   0000007E   0x8809             LDRH     R1,[R1, #+0]
   \   00000080   0x1840             ADDS     R0,R0,R1
   \   00000082   0x490D             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   00000084   0x6008             STR      R0,[R1, #+0]
   \   00000086   0xE002             B.N      ??TIM5_IRQHandler_4
     36                }
     37                else
     38                {
     39                  uwCapture = 0;
   \                     ??TIM5_IRQHandler_5: (+1)
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x490B             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   0000008C   0x6008             STR      R0,[R1, #+0]
     40                }
     41          
     42                /* Frequency computation */ 
     43                uwTIM5Freq = (uint32_t) SystemCoreClock / (2*uwCapture);
   \                     ??TIM5_IRQHandler_4: (+1)
   \   0000008E   0x480B             LDR.N    R0,??TIM5_IRQHandler_0+0x14
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x4909             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   00000094   0x6809             LDR      R1,[R1, #+0]
   \   00000096   0x0049             LSLS     R1,R1,#+1
   \   00000098   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000009C   0x4908             LDR.N    R1,??TIM5_IRQHandler_0+0x18
   \   0000009E   0x6008             STR      R0,[R1, #+0]
     44                uhCaptureNumber = 0;    
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x4902             LDR.N    R1,??TIM5_IRQHandler_0+0x4
   \   000000A4   0x8008             STRH     R0,[R1, #+0]
     45              }
     46            }
     47          }
   \                     ??TIM5_IRQHandler_1: (+1)
   \   000000A6   0xBD01             POP      {R0,PC}          ;; return
   \                     ??TIM5_IRQHandler_0:
   \   000000A8   0x40000C00         DC32     0x40000c00
   \   000000AC   0x........         DC32     uhCaptureNumber
   \   000000B0   0x........         DC32     uhIC2ReadValue1
   \   000000B4   0x........         DC32     uhIC2ReadValue2
   \   000000B8   0x........         DC32     uwCapture
   \   000000BC   0x........         DC32     SystemCoreClock
   \   000000C0   0x........         DC32     uwTIM5Freq

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TIM5_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetCapture2
         8   -> TIM_GetITStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     196  TIM5_IRQHandler
       2  uhCaptureNumber
       2  uhIC2ReadValue1
       2  uhIC2ReadValue2
       4  uwCapture
       4  uwTIM5Freq

 
  14 bytes in section .bss
 196 bytes in section .text
 
 196 bytes of CODE memory
  14 bytes of DATA memory

Errors: none
Warnings: 4
