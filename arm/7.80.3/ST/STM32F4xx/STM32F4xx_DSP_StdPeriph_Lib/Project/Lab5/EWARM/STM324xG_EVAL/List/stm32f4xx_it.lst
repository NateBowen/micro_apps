###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       20/Feb/2017  18:22:32
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\stm32f4xx_it.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab5\stm32f4xx_it.c
      1          #include "stm32f4xx_it.h"
      2          

   \                                 In section .bss, align 2
      3          __IO uint16_t uhIC2ReadValue1 = 0;
   \                     uhIC2ReadValue1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      4          __IO uint16_t uhIC2ReadValue2 = 0;
   \                     uhIC2ReadValue2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      5          __IO uint16_t uhIC2ReadValue3 = 0;
   \                     uhIC2ReadValue3:
   \   00000000                      DS8 2
      6          

   \                                 In section .bss, align 2
      7          __IO uint16_t uhCaptureNumber = 0;
   \                     uhCaptureNumber:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
      8          __IO uint32_t uwCapture = 0;
   \                     uwCapture:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      9          __IO uint32_t uwCapture2 = 0;
   \                     uwCapture2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          __IO uint32_t uwTIM5Freq = 0;
   \                     uwTIM5Freq:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     11          __IO uint32_t uwTIM5Period = 0;
   \                     uwTIM5Period:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     12          __IO uint32_t uwTIM5Duty = 0;
   \                     uwTIM5Duty:
   \   00000000                      DS8 4
     13          

   \                                 In section .bss, align 4
     14          int sigLevel = 0;
   \                     sigLevel:
   \   00000000                      DS8 4
     15          

   \                                 In section .text, align 4, keep-with-next
     16          void TIM5_IRQHandler(void)
     17          { 
   \                     TIM5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     18            if(TIM_GetITStatus(TIM5, TIM_IT_CC2) == SET) 
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x4857             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   00000006   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xF040 0x80A8      BNE.W    ??TIM5_IRQHandler_1
     19            {   
     20              /* Check the signal level, only measure when starting with a peak */  
     21              sigLevel = (GPIOA->IDR & 0x02) >> 1;   
   \   00000010   0x4855             LDR.N    R0,??TIM5_IRQHandler_0+0x4  ;; 0x40020010
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000018   0x4954             LDR.N    R1,??TIM5_IRQHandler_0+0x8
   \   0000001A   0x6008             STR      R0,[R1, #+0]
     22              
     23              if ((uhCaptureNumber == 0) & (sigLevel == 1))
   \   0000001C   0x4854             LDR.N    R0,??TIM5_IRQHandler_0+0xC
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD10C             BNE.N    ??TIM5_IRQHandler_2
   \   00000024   0x4851             LDR.N    R0,??TIM5_IRQHandler_0+0x8
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD108             BNE.N    ??TIM5_IRQHandler_2
     24              {    
     25                /* Get the Input Capture value */
     26                uhIC2ReadValue1 = TIM_GetCapture2(TIM5);
   \   0000002C   0x484D             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   0000002E   0x.... 0x....      BL       TIM_GetCapture2
   \   00000032   0x4950             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   00000034   0x8008             STRH     R0,[R1, #+0]
     27                uhCaptureNumber = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x494D             LDR.N    R1,??TIM5_IRQHandler_0+0xC
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
   \   0000003C   0xE08C             B.N      ??TIM5_IRQHandler_3
     28              } 
     29              
     30              else if(uhCaptureNumber == 1)
   \                     ??TIM5_IRQHandler_2: (+1)
   \   0000003E   0x484C             LDR.N    R0,??TIM5_IRQHandler_0+0xC
   \   00000040   0x8800             LDRH     R0,[R0, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD108             BNE.N    ??TIM5_IRQHandler_4
     31              {
     32                /* Get the Input Capture value */
     33                uhIC2ReadValue2 = TIM_GetCapture2(TIM5); 
   \   00000046   0x4847             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   00000048   0x.... 0x....      BL       TIM_GetCapture2
   \   0000004C   0x494A             LDR.N    R1,??TIM5_IRQHandler_0+0x14
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
     34                uhCaptureNumber = 2;
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x4947             LDR.N    R1,??TIM5_IRQHandler_0+0xC
   \   00000054   0x8008             STRH     R0,[R1, #+0]
   \   00000056   0xE07F             B.N      ??TIM5_IRQHandler_3
     35              }
     36              
     37              
     38              else if (uhCaptureNumber == 2)
   \                     ??TIM5_IRQHandler_4: (+1)
   \   00000058   0x4845             LDR.N    R0,??TIM5_IRQHandler_0+0xC
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x2802             CMP      R0,#+2
   \   0000005E   0xD17B             BNE.N    ??TIM5_IRQHandler_3
     39              {     
     40                /* Get the Input Capture value */
     41                uhIC2ReadValue3 = TIM_GetCapture2(TIM5); 
   \   00000060   0x4840             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   00000062   0x.... 0x....      BL       TIM_GetCapture2
   \   00000066   0x4945             LDR.N    R1,??TIM5_IRQHandler_0+0x18
   \   00000068   0x8008             STRH     R0,[R1, #+0]
     42                
     43                /* First period computation */
     44                if (uhIC2ReadValue2 > uhIC2ReadValue1)
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   0000006A   0x4842             LDR.N    R0,??TIM5_IRQHandler_0+0x10
   \   0000006C   0x8800             LDRH     R0,[R0, #+0]
   \   0000006E   0x4942             LDR.N    R1,??TIM5_IRQHandler_0+0x14
   \   00000070   0x8809             LDRH     R1,[R1, #+0]
   \   00000072   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xD208             BCS.N    ??TIM5_IRQHandler_5
     45                {
     46                  uwCapture = (uhIC2ReadValue2 - uhIC2ReadValue1); 
                         ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   00000078   0x483F             LDR.N    R0,??TIM5_IRQHandler_0+0x14
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007E   0x493D             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   00000080   0x8809             LDRH     R1,[R1, #+0]
   \   00000082   0x1A40             SUBS     R0,R0,R1
   \   00000084   0x493E             LDR.N    R1,??TIM5_IRQHandler_0+0x1C
   \   00000086   0x6008             STR      R0,[R1, #+0]
   \   00000088   0xE015             B.N      ??TIM5_IRQHandler_6
     47                }
     48                else if (uhIC2ReadValue2 < uhIC2ReadValue1)
                            ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \                     ??TIM5_IRQHandler_5: (+1)
   \   0000008A   0x483B             LDR.N    R0,??TIM5_IRQHandler_0+0x14
   \   0000008C   0x8800             LDRH     R0,[R0, #+0]
   \   0000008E   0x4939             LDR.N    R1,??TIM5_IRQHandler_0+0x10
   \   00000090   0x8809             LDRH     R1,[R1, #+0]
   \   00000092   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000094   0x4288             CMP      R0,R1
   \   00000096   0xD20B             BCS.N    ??TIM5_IRQHandler_7
     49                {
     50                  uwCapture = ((0xFFFF - uhIC2ReadValue1) + uhIC2ReadValue2); 
                         ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   00000098   0x4836             LDR.N    R0,??TIM5_IRQHandler_0+0x10
   \   0000009A   0x8800             LDRH     R0,[R0, #+0]
   \   0000009C   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000A0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A2   0x1A08             SUBS     R0,R1,R0
   \   000000A4   0x4934             LDR.N    R1,??TIM5_IRQHandler_0+0x14
   \   000000A6   0x8809             LDRH     R1,[R1, #+0]
   \   000000A8   0x1840             ADDS     R0,R0,R1
   \   000000AA   0x4935             LDR.N    R1,??TIM5_IRQHandler_0+0x1C
   \   000000AC   0x6008             STR      R0,[R1, #+0]
   \   000000AE   0xE002             B.N      ??TIM5_IRQHandler_6
     51                }
     52                else
     53                {
     54                  uwCapture = 0;
   \                     ??TIM5_IRQHandler_7: (+1)
   \   000000B0   0x2000             MOVS     R0,#+0
   \   000000B2   0x4933             LDR.N    R1,??TIM5_IRQHandler_0+0x1C
   \   000000B4   0x6008             STR      R0,[R1, #+0]
     55                }
     56                
     57                /* Second period computation */
     58                if (uhIC2ReadValue3 > uhIC2ReadValue2)
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \                     ??TIM5_IRQHandler_6: (+1)
   \   000000B6   0x4830             LDR.N    R0,??TIM5_IRQHandler_0+0x14
   \   000000B8   0x8800             LDRH     R0,[R0, #+0]
   \   000000BA   0x4930             LDR.N    R1,??TIM5_IRQHandler_0+0x18
   \   000000BC   0x8809             LDRH     R1,[R1, #+0]
   \   000000BE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000C0   0x4288             CMP      R0,R1
   \   000000C2   0xD208             BCS.N    ??TIM5_IRQHandler_8
     59                {
     60                  uwCapture2 = (uhIC2ReadValue3 - uhIC2ReadValue2); 
                         ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   000000C4   0x482D             LDR.N    R0,??TIM5_IRQHandler_0+0x18
   \   000000C6   0x8800             LDRH     R0,[R0, #+0]
   \   000000C8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000CA   0x492B             LDR.N    R1,??TIM5_IRQHandler_0+0x14
   \   000000CC   0x8809             LDRH     R1,[R1, #+0]
   \   000000CE   0x1A40             SUBS     R0,R0,R1
   \   000000D0   0x492C             LDR.N    R1,??TIM5_IRQHandler_0+0x20
   \   000000D2   0x6008             STR      R0,[R1, #+0]
   \   000000D4   0xE015             B.N      ??TIM5_IRQHandler_9
     61                }
     62                else if (uhIC2ReadValue3 < uhIC2ReadValue2)
                            ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \                     ??TIM5_IRQHandler_8: (+1)
   \   000000D6   0x4829             LDR.N    R0,??TIM5_IRQHandler_0+0x18
   \   000000D8   0x8800             LDRH     R0,[R0, #+0]
   \   000000DA   0x4927             LDR.N    R1,??TIM5_IRQHandler_0+0x14
   \   000000DC   0x8809             LDRH     R1,[R1, #+0]
   \   000000DE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000E0   0x4288             CMP      R0,R1
   \   000000E2   0xD20B             BCS.N    ??TIM5_IRQHandler_10
     63                {
     64                  uwCapture2 = ((0xFFFF - uhIC2ReadValue2) + uhIC2ReadValue3); 
                         ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   000000E4   0x4824             LDR.N    R0,??TIM5_IRQHandler_0+0x14
   \   000000E6   0x8800             LDRH     R0,[R0, #+0]
   \   000000E8   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000EC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000EE   0x1A08             SUBS     R0,R1,R0
   \   000000F0   0x4922             LDR.N    R1,??TIM5_IRQHandler_0+0x18
   \   000000F2   0x8809             LDRH     R1,[R1, #+0]
   \   000000F4   0x1840             ADDS     R0,R0,R1
   \   000000F6   0x4923             LDR.N    R1,??TIM5_IRQHandler_0+0x20
   \   000000F8   0x6008             STR      R0,[R1, #+0]
   \   000000FA   0xE002             B.N      ??TIM5_IRQHandler_9
     65                }
     66                else
     67                {
     68                  uwCapture2 = 0;
   \                     ??TIM5_IRQHandler_10: (+1)
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x4921             LDR.N    R1,??TIM5_IRQHandler_0+0x20
   \   00000100   0x6008             STR      R0,[R1, #+0]
     69                }
     70                
     71                /*  Period computation (in microseconds) */
     72                uwTIM5Period = 2 * (uwCapture + uwCapture2) / (SystemCoreClock / 1000000);
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \                     ??TIM5_IRQHandler_9: (+1)
   \   00000102   0x481F             LDR.N    R0,??TIM5_IRQHandler_0+0x1C
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0x4920             LDR.N    R1,??TIM5_IRQHandler_0+0x24
   \   00000108   0x6809             LDR      R1,[R1, #+0]
   \   0000010A   0x4A20             LDR.N    R2,??TIM5_IRQHandler_0+0x28  ;; 0xf4240
   \   0000010C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000110   0x4A1C             LDR.N    R2,??TIM5_IRQHandler_0+0x20
   \   00000112   0x6812             LDR      R2,[R2, #+0]
   \   00000114   0x1810             ADDS     R0,R2,R0
   \   00000116   0x0040             LSLS     R0,R0,#+1
   \   00000118   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000011C   0x491C             LDR.N    R1,??TIM5_IRQHandler_0+0x2C
   \   0000011E   0x6008             STR      R0,[R1, #+0]
     73                
     74                /* Duty Cycle computation (percentage) */
     75                uwTIM5Duty = (uwCapture * 100) / (uwCapture + uwCapture2);
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   00000120   0x4817             LDR.N    R0,??TIM5_IRQHandler_0+0x1C
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x4916             LDR.N    R1,??TIM5_IRQHandler_0+0x1C
   \   00000126   0x6809             LDR      R1,[R1, #+0]
   \   00000128   0x2264             MOVS     R2,#+100
   \   0000012A   0x4350             MULS     R0,R2,R0
   \   0000012C   0x4A15             LDR.N    R2,??TIM5_IRQHandler_0+0x20
   \   0000012E   0x6812             LDR      R2,[R2, #+0]
   \   00000130   0x1851             ADDS     R1,R2,R1
   \   00000132   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000136   0x4917             LDR.N    R1,??TIM5_IRQHandler_0+0x30
   \   00000138   0x6008             STR      R0,[R1, #+0]
     76                
     77                /* Frequency computation */ 
     78                uwTIM5Freq = (uint32_t) SystemCoreClock / (2 * (uwCapture + uwCapture2));
                       ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is undefined
          in this statement
   \   0000013A   0x4811             LDR.N    R0,??TIM5_IRQHandler_0+0x1C
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x4912             LDR.N    R1,??TIM5_IRQHandler_0+0x24
   \   00000140   0x6809             LDR      R1,[R1, #+0]
   \   00000142   0x4A10             LDR.N    R2,??TIM5_IRQHandler_0+0x20
   \   00000144   0x6812             LDR      R2,[R2, #+0]
   \   00000146   0x1810             ADDS     R0,R2,R0
   \   00000148   0x0040             LSLS     R0,R0,#+1
   \   0000014A   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   0000014E   0x4912             LDR.N    R1,??TIM5_IRQHandler_0+0x34
   \   00000150   0x6008             STR      R0,[R1, #+0]
     79                
     80                uhCaptureNumber = 0; 
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0x4906             LDR.N    R1,??TIM5_IRQHandler_0+0xC
   \   00000156   0x8008             STRH     R0,[R1, #+0]
     81              }
     82                  /* Clear TIM5 Capture compare interrupt pending bit */
     83              TIM_ClearITPendingBit(TIM5, TIM_IT_CC2);
   \                     ??TIM5_IRQHandler_3: (+1)
   \   00000158   0x2104             MOVS     R1,#+4
   \   0000015A   0x4802             LDR.N    R0,??TIM5_IRQHandler_0  ;; 0x40000c00
   \   0000015C   0x.... 0x....      BL       TIM_ClearITPendingBit
     84            } 
     85          }
   \                     ??TIM5_IRQHandler_1: (+1)
   \   00000160   0xBD01             POP      {R0,PC}          ;; return
   \   00000162   0xBF00             Nop      
   \                     ??TIM5_IRQHandler_0:
   \   00000164   0x40000C00         DC32     0x40000c00
   \   00000168   0x40020010         DC32     0x40020010
   \   0000016C   0x........         DC32     sigLevel
   \   00000170   0x........         DC32     uhCaptureNumber
   \   00000174   0x........         DC32     uhIC2ReadValue1
   \   00000178   0x........         DC32     uhIC2ReadValue2
   \   0000017C   0x........         DC32     uhIC2ReadValue3
   \   00000180   0x........         DC32     uwCapture
   \   00000184   0x........         DC32     uwCapture2
   \   00000188   0x........         DC32     SystemCoreClock
   \   0000018C   0x000F4240         DC32     0xf4240
   \   00000190   0x........         DC32     uwTIM5Period
   \   00000194   0x........         DC32     uwTIM5Duty
   \   00000198   0x........         DC32     uwTIM5Freq

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TIM5_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetCapture2
         8   -> TIM_GetITStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     412  TIM5_IRQHandler
       4  sigLevel
       2  uhCaptureNumber
       2  uhIC2ReadValue1
       2  uhIC2ReadValue2
       2  uhIC2ReadValue3
       4  uwCapture
       4  uwCapture2
       4  uwTIM5Duty
       4  uwTIM5Freq
       4  uwTIM5Period

 
  32 bytes in section .bss
 412 bytes in section .text
 
 412 bytes of CODE memory
  32 bytes of DATA memory

Errors: none
Warnings: 11
