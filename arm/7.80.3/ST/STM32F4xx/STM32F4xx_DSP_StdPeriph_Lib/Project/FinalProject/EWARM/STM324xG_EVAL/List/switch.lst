###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       05/Apr/2017  20:16:38
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\switch.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\switch.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\List\switch.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\Obj\switch.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\switch.c
      1          #include "switch.h"
      2          

   \                                 In section .text, align 4, keep-with-next
      3          void Switch_Config(void){
   \                     Switch_Config: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
      4          
      5            //  Dip Switch PB0 AND PB1
      6            //  Dip switch START/STOP config
      7            //  GPIOB
      8          
      9            GPIO_InitTypeDef GPIO_InitStructure;
     10            RCC_AHB1PeriphClockCmd(SWITCH_PORT_CLOCK, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     11          
     12            GPIO_InitStructure.GPIO_Pin = STOP_SWITCH | START_SWITCH;    
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x9000             STR      R0,[SP, #+0]
     13            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;             
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF88D 0x0004      STRB     R0,[SP, #+4]
     14            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0xF88D 0x0007      STRB     R0,[SP, #+7]
     15            GPIO_Init(SWITCH_PORT, &GPIO_InitStructure);                    
   \   0000001C   0x4669             MOV      R1,SP
   \   0000001E   0x4802             LDR.N    R0,??Switch_Config_0  ;; 0x40020400
   \   00000020   0x.... 0x....      BL       GPIO_Init
     16          }
   \   00000024   0xBD07             POP      {R0-R2,PC}       ;; return
   \   00000026   0xBF00             Nop      
   \                     ??Switch_Config_0:
   \   00000028   0x40020400         DC32     0x40020400

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Switch_Config
        16   -> GPIO_Init
        16   -> RCC_AHB1PeriphClockCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  Switch_Config

 
 44 bytes in section .text
 
 44 bytes of CODE memory

Errors: none
Warnings: none
