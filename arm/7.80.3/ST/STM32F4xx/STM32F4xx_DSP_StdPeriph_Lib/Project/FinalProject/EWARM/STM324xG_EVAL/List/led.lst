###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       06/Apr/2017  18:36:34
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\led.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\led.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\List\led.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\Obj\led.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\led.c
      1          #include "led.h"
      2          #include "delay.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void LED_Config(void) {
   \                     LED_Config: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
      5          
      6            GPIO_InitTypeDef GPIO_InitStructure;
      7          
      8            RCC_AHB1PeriphClockCmd(LED_PORT_CLOCK, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
      9          
     10            GPIO_InitStructure.GPIO_Pin = INDICATOR_LED_PIN | IR_EMITTER_PIN;
   \   0000000C   0x200C             MOVS     R0,#+12
   \   0000000E   0x9000             STR      R0,[SP, #+0]
     11            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0004      STRB     R0,[SP, #+4]
     12            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x0006      STRB     R0,[SP, #+6]
     13            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000001C   0x2003             MOVS     R0,#+3
   \   0000001E   0xF88D 0x0005      STRB     R0,[SP, #+5]
     14            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xF88D 0x0007      STRB     R0,[SP, #+7]
     15            GPIO_Init(LED_PORT, &GPIO_InitStructure);
   \   00000028   0x4669             MOV      R1,SP
   \   0000002A   0x....             LDR.N    R0,??DataTable4  ;; 0x40020400
   \   0000002C   0x.... 0x....      BL       GPIO_Init
     16          }
   \   00000030   0xBD07             POP      {R0-R2,PC}       ;; return
     17          

   \                                 In section .text, align 2, keep-with-next
     18          void IndicatorLEDOn(void){
     19            LED_PORT->ODR |= INDICATOR_LED_PIN;
   \                     IndicatorLEDOn: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40020414
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000008   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40020414
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     20          }
   \   0000000C   0x4770             BX       LR               ;; return
     21          

   \                                 In section .text, align 2, keep-with-next
     22          void IndicatorLEDOff(void){
     23            LED_PORT->ODR &= ~INDICATOR_LED_PIN;
   \                     IndicatorLEDOff: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40020414
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000008   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40020414
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     24          }
   \   0000000C   0x4770             BX       LR               ;; return
     25          

   \                                 In section .text, align 2, keep-with-next
     26          void IREmitterOn(void){
     27            LED_PORT->ODR |= IR_EMITTER_PIN;
   \                     IREmitterOn: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40020414
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000008   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40020414
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     28          }
   \   0000000C   0x4770             BX       LR               ;; return
     29          

   \                                 In section .text, align 2, keep-with-next
     30          void IREmitterOff(void){
     31            LED_PORT->ODR &= ~IR_EMITTER_PIN;
   \                     IREmitterOff: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40020414
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000008   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40020414
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     32          }
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x40020414         DC32     0x40020414

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   IREmitterOff
       0   IREmitterOn
       0   IndicatorLEDOff
       0   IndicatorLEDOn
      16   LED_Config
        16   -> GPIO_Init
        16   -> RCC_AHB1PeriphClockCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
      14  IREmitterOff
      14  IREmitterOn
      14  IndicatorLEDOff
      14  IndicatorLEDOn
      50  LED_Config

 
 114 bytes in section .text
 
 114 bytes of CODE memory

Errors: none
Warnings: none
