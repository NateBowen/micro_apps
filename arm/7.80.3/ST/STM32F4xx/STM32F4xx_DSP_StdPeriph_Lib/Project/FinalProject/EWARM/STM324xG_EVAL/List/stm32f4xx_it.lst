###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       05/Apr/2017  20:00:13
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\stm32f4xx_it.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\FinalProject\stm32f4xx_it.c
      1          #include "main.h"
      2          #include "stm32f4xx_it.h"
      3          
      4          /***************************************************************************
      5          The SysTick_Hander takes care of decrementing the global TimingDelay variable
      6          that is used in the Delay() function.
      7          ****************************************************************************/
      8          

   \                                 In section .bss, align 4
      9          uint32_t TimingDelay;
   \                     TimingDelay:
   \   00000000                      DS8 4
     10          

   \                                 In section .text, align 2, keep-with-next
     11          void SysTick_Handler(void)
     12          {
     13            TimingDelay--;
   \                     SysTick_Handler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x1E40             SUBS     R0,R0,#+1
   \   00000006   0x....             LDR.N    R1,??DataTable1
   \   00000008   0x6008             STR      R0,[R1, #+0]
     14          }
   \   0000000A   0x4770             BX       LR               ;; return
     15          
     16          
     17          /***************************************************************************
     18          The TIM5_IRQHandler handles the the input capture for the Encoder frequency.
     19          It sets the global encoderFrequency variable.
     20          ****************************************************************************/
     21          

   \                                 In section .bss, align 4
     22          uint32_t encoderFrequency;
   \                     encoderFrequency:
   \   00000000                      DS8 4
     23          

   \                                 In section .text, align 2, keep-with-next
     24          void TIM5_IRQHandler(void){
   \                     TIM5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     25            
     26            static uint16_t TIM5_CC2_sigLevel = 0;
     27            static  uint16_t IC2ReadValue1 = 0;
     28            static  uint16_t IC2ReadValue2 = 0;
     29            static  uint16_t IC2ReadValue3 = 0;
     30            static   uint16_t CaptureNumber = 0;
     31            static   uint32_t Capture = 0;
     32            static   uint32_t Capture2 = 0;
     33            
     34            if(TIM_GetITStatus(TIM5, TIM_IT_CC2) == SET) {
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000006   0x.... 0x....      BL       TIM_GetITStatus
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xF040 0x8084      BNE.W    ??TIM5_IRQHandler_0
     35              /* Check the signal level, only measure when starting with a peak */
     36              TIM5_CC2_sigLevel = (GPIOA->IDR & 0x02) >> 1;
   \   00000010   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40020010
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable1_3
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     37              
     38              if ((CaptureNumber == 0) & (TIM5_CC2_sigLevel == 1)) {
   \   0000001C   0x....             LDR.N    R0,??DataTable1_4
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD10C             BNE.N    ??TIM5_IRQHandler_1
   \   00000024   0x....             LDR.N    R0,??DataTable1_3
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD108             BNE.N    ??TIM5_IRQHandler_1
     39                /* Get the Input Capture value */
     40                IC2ReadValue1 = TIM_GetCapture2(TIM5);
   \   0000002C   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   0000002E   0x.... 0x....      BL       TIM_GetCapture2
   \   00000032   0x....             LDR.N    R1,??DataTable1_5
   \   00000034   0x8008             STRH     R0,[R1, #+0]
     41                CaptureNumber = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable1_4
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
   \   0000003C   0xE068             B.N      ??TIM5_IRQHandler_2
     42              }
     43              
     44              else if(CaptureNumber == 1) {
   \                     ??TIM5_IRQHandler_1: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable1_4
   \   00000040   0x8800             LDRH     R0,[R0, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD108             BNE.N    ??TIM5_IRQHandler_3
     45                /* Get the Input Capture value */
     46                IC2ReadValue2 = TIM_GetCapture2(TIM5);
   \   00000046   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000048   0x.... 0x....      BL       TIM_GetCapture2
   \   0000004C   0x....             LDR.N    R1,??DataTable1_6
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
     47                CaptureNumber = 2;
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x....             LDR.N    R1,??DataTable1_4
   \   00000054   0x8008             STRH     R0,[R1, #+0]
   \   00000056   0xE05B             B.N      ??TIM5_IRQHandler_2
     48              }
     49              
     50              else if (CaptureNumber == 2) {
   \                     ??TIM5_IRQHandler_3: (+1)
   \   00000058   0x....             LDR.N    R0,??DataTable1_4
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x2802             CMP      R0,#+2
   \   0000005E   0xD157             BNE.N    ??TIM5_IRQHandler_2
     51                /* Get the Input Capture value */
     52                IC2ReadValue3 = TIM_GetCapture2(TIM5);
   \   00000060   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000062   0x.... 0x....      BL       TIM_GetCapture2
   \   00000066   0x....             LDR.N    R1,??DataTable1_7
   \   00000068   0x8008             STRH     R0,[R1, #+0]
     53                
     54                /* First period computation */
     55                if (IC2ReadValue2 > IC2ReadValue1) {
   \   0000006A   0x....             LDR.N    R0,??DataTable1_5
   \   0000006C   0x8800             LDRH     R0,[R0, #+0]
   \   0000006E   0x....             LDR.N    R1,??DataTable1_6
   \   00000070   0x8809             LDRH     R1,[R1, #+0]
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xD207             BCS.N    ??TIM5_IRQHandler_4
     56                  Capture = (IC2ReadValue2 - IC2ReadValue1);
   \   00000076   0x....             LDR.N    R0,??DataTable1_6
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0x....             LDR.N    R1,??DataTable1_5
   \   0000007C   0x8809             LDRH     R1,[R1, #+0]
   \   0000007E   0x1A40             SUBS     R0,R0,R1
   \   00000080   0x....             LDR.N    R1,??DataTable1_8
   \   00000082   0x6008             STR      R0,[R1, #+0]
   \   00000084   0xE013             B.N      ??TIM5_IRQHandler_5
     57                }
     58                else if (IC2ReadValue2 < IC2ReadValue1) {
   \                     ??TIM5_IRQHandler_4: (+1)
   \   00000086   0x....             LDR.N    R0,??DataTable1_6
   \   00000088   0x8800             LDRH     R0,[R0, #+0]
   \   0000008A   0x....             LDR.N    R1,??DataTable1_5
   \   0000008C   0x8809             LDRH     R1,[R1, #+0]
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xD20A             BCS.N    ??TIM5_IRQHandler_6
     59                  Capture = ((0xFFFF - IC2ReadValue1) + IC2ReadValue2);
   \   00000092   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000096   0x....             LDR.N    R1,??DataTable1_5
   \   00000098   0x8809             LDRH     R1,[R1, #+0]
   \   0000009A   0x1A40             SUBS     R0,R0,R1
   \   0000009C   0x....             LDR.N    R1,??DataTable1_6
   \   0000009E   0x8809             LDRH     R1,[R1, #+0]
   \   000000A0   0x1840             ADDS     R0,R0,R1
   \   000000A2   0x....             LDR.N    R1,??DataTable1_8
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   \   000000A6   0xE002             B.N      ??TIM5_IRQHandler_5
     60                }
     61                else {
     62                  Capture = 0;
   \                     ??TIM5_IRQHandler_6: (+1)
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x....             LDR.N    R1,??DataTable1_8
   \   000000AC   0x6008             STR      R0,[R1, #+0]
     63                }
     64                
     65                /* Second period computation */
     66                if (IC2ReadValue3 > IC2ReadValue2) {
   \                     ??TIM5_IRQHandler_5: (+1)
   \   000000AE   0x....             LDR.N    R0,??DataTable1_6
   \   000000B0   0x8800             LDRH     R0,[R0, #+0]
   \   000000B2   0x....             LDR.N    R1,??DataTable1_7
   \   000000B4   0x8809             LDRH     R1,[R1, #+0]
   \   000000B6   0x4288             CMP      R0,R1
   \   000000B8   0xD207             BCS.N    ??TIM5_IRQHandler_7
     67                  Capture2 = (IC2ReadValue3 - IC2ReadValue2);
   \   000000BA   0x....             LDR.N    R0,??DataTable1_7
   \   000000BC   0x8800             LDRH     R0,[R0, #+0]
   \   000000BE   0x....             LDR.N    R1,??DataTable1_6
   \   000000C0   0x8809             LDRH     R1,[R1, #+0]
   \   000000C2   0x1A40             SUBS     R0,R0,R1
   \   000000C4   0x....             LDR.N    R1,??DataTable1_9
   \   000000C6   0x6008             STR      R0,[R1, #+0]
   \   000000C8   0xE013             B.N      ??TIM5_IRQHandler_8
     68                }
     69                else if (IC2ReadValue3 < IC2ReadValue2) {
   \                     ??TIM5_IRQHandler_7: (+1)
   \   000000CA   0x....             LDR.N    R0,??DataTable1_7
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x....             LDR.N    R1,??DataTable1_6
   \   000000D0   0x8809             LDRH     R1,[R1, #+0]
   \   000000D2   0x4288             CMP      R0,R1
   \   000000D4   0xD20A             BCS.N    ??TIM5_IRQHandler_9
     70                  Capture2 = ((0xFFFF - IC2ReadValue2) + IC2ReadValue3);
   \   000000D6   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000000DA   0x....             LDR.N    R1,??DataTable1_6
   \   000000DC   0x8809             LDRH     R1,[R1, #+0]
   \   000000DE   0x1A40             SUBS     R0,R0,R1
   \   000000E0   0x....             LDR.N    R1,??DataTable1_7
   \   000000E2   0x8809             LDRH     R1,[R1, #+0]
   \   000000E4   0x1840             ADDS     R0,R0,R1
   \   000000E6   0x....             LDR.N    R1,??DataTable1_9
   \   000000E8   0x6008             STR      R0,[R1, #+0]
   \   000000EA   0xE002             B.N      ??TIM5_IRQHandler_8
     71                }
     72                else {
     73                  Capture2 = 0;
   \                     ??TIM5_IRQHandler_9: (+1)
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x....             LDR.N    R1,??DataTable1_9
   \   000000F0   0x6008             STR      R0,[R1, #+0]
     74                }   
     75                /* Frequency computation */
     76                encoderFrequency = (uint32_t) SystemCoreClock / (2 * (Capture + Capture2));
   \                     ??TIM5_IRQHandler_8: (+1)
   \   000000F2   0x....             LDR.N    R0,??DataTable1_10
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x....             LDR.N    R1,??DataTable1_8
   \   000000F8   0x6809             LDR      R1,[R1, #+0]
   \   000000FA   0x....             LDR.N    R2,??DataTable1_9
   \   000000FC   0x6812             LDR      R2,[R2, #+0]
   \   000000FE   0x1851             ADDS     R1,R2,R1
   \   00000100   0x0049             LSLS     R1,R1,#+1
   \   00000102   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000106   0x....             LDR.N    R1,??DataTable1_11
   \   00000108   0x6008             STR      R0,[R1, #+0]
     77                
     78                CaptureNumber = 0;
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x....             LDR.N    R1,??DataTable1_4
   \   0000010E   0x8008             STRH     R0,[R1, #+0]
     79              }
     80              /* Clear TIM5 Capture compare interrupt pending bit */
     81              TIM_ClearITPendingBit(TIM5, TIM_IT_CC2);
   \                     ??TIM5_IRQHandler_2: (+1)
   \   00000110   0x2104             MOVS     R1,#+4
   \   00000112   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40000c00
   \   00000114   0x.... 0x....      BL       TIM_ClearITPendingBit
     82            }
     83          }
   \                     ??TIM5_IRQHandler_0: (+1)
   \   00000118   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::TIM5_CC2_sigLevel`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::IC2ReadValue1`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::IC2ReadValue2`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::IC2ReadValue3`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `TIM5_IRQHandler::CaptureNumber`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
   \                     `TIM5_IRQHandler::Capture`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `TIM5_IRQHandler::Capture2`:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     TimingDelay

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40000C00         DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40020010         DC32     0x40020010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::TIM5_CC2_sigLevel`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::CaptureNumber`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::IC2ReadValue1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::IC2ReadValue2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::IC2ReadValue3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::Capture`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     `TIM5_IRQHandler::Capture2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     encoderFrequency

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SysTick_Handler
       8   TIM5_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetCapture2
         8   -> TIM_GetITStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  Capture
       4  Capture2
       2  CaptureNumber
       2  IC2ReadValue1
       2  IC2ReadValue2
       2  IC2ReadValue3
      12  SysTick_Handler
       2  TIM5_CC2_sigLevel
     282  TIM5_IRQHandler
       4  TimingDelay
       4  encoderFrequency

 
  26 bytes in section .bss
 342 bytes in section .text
 
 342 bytes of CODE memory
  26 bytes of DATA memory

Errors: none
Warnings: none
