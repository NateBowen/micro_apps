###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       06/Feb/2017  18:00:08
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\stm32f4xx_it.c
#    Command line =  
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\stm32f4xx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\STM324xG_EVAL\List
#        -o
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\..\
#        -I
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\STM324xG_EVAL\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\EWARM\STM324xG_EVAL\Obj\stm32f4xx_it.o
#
###############################################################################

C:\bowen_lab3\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab3\stm32f4xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    Project/STM32F4xx_StdPeriph_Template/stm32f4xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V1.2.0RC2
      6            * @date    20-February-2013
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     14            *
     15            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     16            * You may not use this file except in compliance with the License.
     17            * You may obtain a copy of the License at:
     18            *
     19            *        http://www.st.com/software_license_agreement_liberty_v2
     20            *
     21            * Unless required by applicable law or agreed to in writing, software 
     22            * distributed under the License is distributed on an "AS IS" BASIS, 
     23            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     24            * See the License for the specific language governing permissions and
     25            * limitations under the License.
     26            *
     27            ******************************************************************************
     28            */
     29          
     30          /* Includes ------------------------------------------------------------------*/
     31          #include "stm32f4xx_it.h"
     32          #include "main.h"
     33          
     34          /** @addtogroup Template_Project
     35            * @{
     36            */
     37          
     38          /* Private typedef -----------------------------------------------------------*/
     39          /* Private define ------------------------------------------------------------*/
     40          /* Private macro -------------------------------------------------------------*/
     41          /* Private variables ---------------------------------------------------------*/
     42          /* Private function prototypes -----------------------------------------------*/
     43          /* Private functions ---------------------------------------------------------*/
     44          
     45          /******************************************************************************/
     46          /*            Cortex-M4 Processor Exceptions Handlers                         */
     47          /******************************************************************************/
     48          
     49          /* ISR for EXTI line 2 */

   \                                 In section .text, align 2, keep-with-next
     50          void EXTI15_10_IRQHandler(void)
     51          {
   \                     EXTI15_10_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     52            /* Check the EXTI line 2 flag */
     53            if(EXTI_GetITStatus(EXTI_Line14) != RESET)
   \   00000002   0xF44F 0x4080      MOV      R0,#+16384
   \   00000006   0x.... 0x....      BL       EXTI_GetITStatus
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD00C             BEQ.N    ??EXTI15_10_IRQHandler_0
     54            {
     55              /* Toggle the Data line */
     56              int x  = GPIOA->ODR;
   \   0000000E   0x....             LDR.N    R0,??DataTable0  ;; 0x40020014
   \   00000010   0x6800             LDR      R0,[R0, #+0]
     57              GPIOA->ODR = (x - 8)/256;
   \   00000012   0x3808             SUBS     R0,R0,#+8
   \   00000014   0xF44F 0x7180      MOV      R1,#+256
   \   00000018   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001C   0x....             LDR.N    R1,??DataTable0  ;; 0x40020014
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     58              
     59              /* Clear the EXTI line 2 pending bit */
     60              EXTI_ClearITPendingBit(EXTI_Line14);
   \   00000020   0xF44F 0x4080      MOV      R0,#+16384
   \   00000024   0x.... 0x....      BL       EXTI_ClearITPendingBit
     61            }
     62          }
   \                     ??EXTI15_10_IRQHandler_0: (+1)
   \   00000028   0xBD01             POP      {R0,PC}          ;; return
     63          
     64          /**
     65            * @brief   This function handles NMI exception.
     66            * @param  None
     67            * @retval None
     68            */

   \                                 In section .text, align 2, keep-with-next
     69          void NMI_Handler(void)
     70          {
     71          }
   \                     NMI_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     72          
     73          /**
     74            * @brief  This function handles Hard Fault exception.
     75            * @param  None
     76            * @retval None
     77            */

   \                                 In section .text, align 2, keep-with-next
     78          void HardFault_Handler(void)
     79          {
     80            /* Go to infinite loop when Hard Fault exception occurs */
     81            while (1)
   \                     HardFault_Handler: (+1)
   \                     ??HardFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??HardFault_Handler_0
     82            {
     83            }
     84          }
     85          
     86          /**
     87            * @brief  This function handles Memory Manage exception.
     88            * @param  None
     89            * @retval None
     90            */

   \                                 In section .text, align 2, keep-with-next
     91          void MemManage_Handler(void)
     92          {
     93            /* Go to infinite loop when Memory Manage exception occurs */
     94            while (1)
   \                     MemManage_Handler: (+1)
   \                     ??MemManage_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??MemManage_Handler_0
     95            {
     96            }
     97          }
     98          
     99          /**
    100            * @brief  This function handles Bus Fault exception.
    101            * @param  None
    102            * @retval None
    103            */

   \                                 In section .text, align 2, keep-with-next
    104          void BusFault_Handler(void)
    105          {
    106            /* Go to infinite loop when Bus Fault exception occurs */
    107            while (1)
   \                     BusFault_Handler: (+1)
   \                     ??BusFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??BusFault_Handler_0
    108            {
    109            }
    110          }
    111          
    112          /**
    113            * @brief  This function handles Usage Fault exception.
    114            * @param  None
    115            * @retval None
    116            */

   \                                 In section .text, align 2, keep-with-next
    117          void UsageFault_Handler(void)
    118          {
    119            /* Go to infinite loop when Usage Fault exception occurs */
    120            while (1)
   \                     UsageFault_Handler: (+1)
   \                     ??UsageFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??UsageFault_Handler_0
    121            {
    122            }
    123          }
    124          
    125          /**
    126            * @brief  This function handles SVCall exception.
    127            * @param  None
    128            * @retval None
    129            */

   \                                 In section .text, align 2, keep-with-next
    130          void SVC_Handler(void)
    131          {
    132          }
   \                     SVC_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    133          
    134          /**
    135            * @brief  This function handles Debug Monitor exception.
    136            * @param  None
    137            * @retval None
    138            */

   \                                 In section .text, align 2, keep-with-next
    139          void DebugMon_Handler(void)
    140          {
    141          }
   \                     DebugMon_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    142          
    143          /**
    144            * @brief  This function handles PendSVC exception.
    145            * @param  None
    146            * @retval None
    147            */

   \                                 In section .text, align 2, keep-with-next
    148          void PendSV_Handler(void)
    149          {
    150          }
   \                     PendSV_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    151          
    152          /**
    153            * @brief  This function handles SysTick Handler.
    154            * @param  None
    155            * @retval None
    156            */

   \                                 In section .text, align 2, keep-with-next
    157          void SysTick_Handler(void)
    158          {
    159            //TimingDelay_Decrement();
    160          }
   \                     SysTick_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x40020014         DC32     0x40020014
    161          
    162          /******************************************************************************/
    163          /*                 STM32F4xx Peripherals Interrupt Handlers                   */
    164          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    165          /*  available peripheral interrupt handler's name please refer to the startup */
    166          /*  file (startup_stm32f4xx.s).                                               */
    167          /******************************************************************************/
    168          
    169          /**
    170            * @brief  This function handles PPP interrupt request.
    171            * @param  None
    172            * @retval None
    173            */
    174          /*void PPP_IRQHandler(void)
    175          {
    176          }*/
    177          
    178          /**
    179            * @}
    180            */ 
    181          
    182          
    183          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       8   EXTI15_10_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       2  BusFault_Handler
       2  DebugMon_Handler
      42  EXTI15_10_IRQHandler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       2  SysTick_Handler
       2  UsageFault_Handler

 
 64 bytes in section .text
 
 64 bytes of CODE memory

Errors: none
Warnings: none
