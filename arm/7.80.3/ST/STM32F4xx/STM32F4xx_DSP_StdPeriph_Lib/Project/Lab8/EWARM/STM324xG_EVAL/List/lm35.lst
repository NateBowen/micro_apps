###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       20/Mar/2017  20:36:01
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\lm35.c
#    Command line =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\lm35.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\STM324xG_EVAL\List\lm35.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\EWARM\STM324xG_EVAL\Obj\lm35.o
#
###############################################################################

C:\Users\ecelab\Desktop\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab8\lm35.c
      1          #include "lm35.h"
      2          
      3          #define LM35_ADDRESS    0x48
      4          

   \                                 In section .text, align 2, keep-with-next
      5          void I2C_Config(void)
      6          { 
   \                     I2C_Config: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
      7            I2C_InitTypeDef  I2C_InitStructure;
      8            GPIO_InitTypeDef  GPIO_InitStructure; 
      9            
     10            RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0xF45F 0x1000      MOVS     R0,#+2097152
   \   0000000A   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     11            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     12            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0xF44F 0x4080      MOV      R0,#+16384
   \   0000001C   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     13            
     14            RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0xF45F 0x1000      MOVS     R0,#+2097152
   \   00000026   0x.... 0x....      BL       RCC_APB1PeriphResetCmd
     15            RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0xF45F 0x1000      MOVS     R0,#+2097152
   \   00000030   0x.... 0x....      BL       RCC_APB1PeriphResetCmd
     16            
     17            /*!< GPIO configuration */
     18            GPIO_PinAFConfig(GPIOB, GPIO_PinSource6, GPIO_AF_I2C1);
   \   00000034   0x2204             MOVS     R2,#+4
   \   00000036   0x2106             MOVS     R1,#+6
   \   00000038   0x....             LDR.N    R0,??DataTable1  ;; 0x40020400
   \   0000003A   0x.... 0x....      BL       GPIO_PinAFConfig
     19            GPIO_PinAFConfig(GPIOB, GPIO_PinSource9, GPIO_AF_I2C1);  
   \   0000003E   0x2204             MOVS     R2,#+4
   \   00000040   0x2109             MOVS     R1,#+9
   \   00000042   0x....             LDR.N    R0,??DataTable1  ;; 0x40020400
   \   00000044   0x.... 0x....      BL       GPIO_PinAFConfig
     20            
     21            /*!< Configure sEE_I2C pins: SCL */   
     22            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
   \   00000048   0x2040             MOVS     R0,#+64
   \   0000004A   0x9000             STR      R0,[SP, #+0]
     23            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   0000004C   0x2002             MOVS     R0,#+2
   \   0000004E   0xF88D 0x0004      STRB     R0,[SP, #+4]
     24            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \   00000052   0x2002             MOVS     R0,#+2
   \   00000054   0xF88D 0x0005      STRB     R0,[SP, #+5]
     25            GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0xF88D 0x0006      STRB     R0,[SP, #+6]
     26            GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0xF88D 0x0007      STRB     R0,[SP, #+7]
     27            GPIO_Init(GPIOB, &GPIO_InitStructure);
   \   00000064   0x4669             MOV      R1,SP
   \   00000066   0x....             LDR.N    R0,??DataTable1  ;; 0x40020400
   \   00000068   0x.... 0x....      BL       GPIO_Init
     28            
     29            /*!< Configure sEE_I2C pins: SDA */
     30            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
   \   0000006C   0xF44F 0x7000      MOV      R0,#+512
   \   00000070   0x9000             STR      R0,[SP, #+0]
     31            GPIO_Init(GPIOB, &GPIO_InitStructure);
   \   00000072   0x4669             MOV      R1,SP
   \   00000074   0x....             LDR.N    R0,??DataTable1  ;; 0x40020400
   \   00000076   0x.... 0x....      BL       GPIO_Init
     32            
     33            /*!< I2C configuration */
     34            I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     35            I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;
   \   00000080   0xF64B 0x70FF      MOVW     R0,#+49151
   \   00000084   0xF8AD 0x000E      STRH     R0,[SP, #+14]
     36            I2C_InitStructure.I2C_OwnAddress1 = 0x00;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0xF8AD 0x0010      STRH     R0,[SP, #+16]
     37            I2C_InitStructure.I2C_Ack = I2C_Ack_Enable;
   \   0000008E   0xF44F 0x6080      MOV      R0,#+1024
   \   00000092   0xF8AD 0x0012      STRH     R0,[SP, #+18]
     38            I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
   \   00000096   0xF44F 0x4080      MOV      R0,#+16384
   \   0000009A   0xF8AD 0x0014      STRH     R0,[SP, #+20]
     39            I2C_InitStructure.I2C_ClockSpeed = 100000;
   \   0000009E   0x....             LDR.N    R0,??DataTable1_1  ;; 0x186a0
   \   000000A0   0x9002             STR      R0,[SP, #+8]
     40            
     41            /* sEE_I2C Peripheral Enable */
     42            I2C_Cmd(I2C1, ENABLE);
   \   000000A2   0x2101             MOVS     R1,#+1
   \   000000A4   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40005400
   \   000000A6   0x.... 0x....      BL       I2C_Cmd
     43            /* Apply sEE_I2C configuration after enabling it */
     44            I2C_Init(I2C1, &I2C_InitStructure);
   \   000000AA   0xA902             ADD      R1,SP,#+8
   \   000000AC   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40005400
   \   000000AE   0x.... 0x....      BL       I2C_Init
     45          }
   \   000000B2   0xB007             ADD      SP,SP,#+28
   \   000000B4   0xBD00             POP      {PC}             ;; return
     46          

   \                                 In section .text, align 2, keep-with-next
     47          uint16_t talkToLM35(void){
   \                     talkToLM35: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     48            uint16_t temperature = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     49            I2C_GenerateSTART(I2C1, ENABLE); 
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40005400
   \   00000008   0x.... 0x....      BL       I2C_GenerateSTART
     50            I2C_Send7bitAddress(I2C1, LM35_ADDRESS, I2C_Direction_Transmitter);
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2148             MOVS     R1,#+72
   \   00000010   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40005400
   \   00000012   0x.... 0x....      BL       I2C_Send7bitAddress
     51            temperature = I2C_ReadRegister(I2C1, 0x00);
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40005400
   \   0000001A   0x.... 0x....      BL       I2C_ReadRegister
   \   0000001E   0x0004             MOVS     R4,R0
     52            I2C_GenerateSTOP(I2C1, ENABLE);
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40005400
   \   00000024   0x.... 0x....      BL       I2C_GenerateSTOP
     53            return temperature;
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
     54          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40005400         DC32     0x40005400

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   I2C_Config
        32   -> GPIO_Init
        32   -> GPIO_PinAFConfig
        32   -> I2C_Cmd
        32   -> I2C_Init
        32   -> RCC_AHB1PeriphClockCmd
        32   -> RCC_APB1PeriphClockCmd
        32   -> RCC_APB1PeriphResetCmd
        32   -> RCC_APB2PeriphClockCmd
       8   talkToLM35
         8   -> I2C_GenerateSTART
         8   -> I2C_GenerateSTOP
         8   -> I2C_ReadRegister
         8   -> I2C_Send7bitAddress


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
     182  I2C_Config
      46  talkToLM35

 
 240 bytes in section .text
 
 240 bytes of CODE memory

Errors: none
Warnings: none
