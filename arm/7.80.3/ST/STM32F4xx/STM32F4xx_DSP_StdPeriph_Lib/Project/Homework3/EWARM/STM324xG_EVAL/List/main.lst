###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       10/Feb/2017  14:29:08
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\main.c
#    Command line =  
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\STM324xG_EVAL\List
#        -o
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\..\
#        -I
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\Users\ecelab\Desktop\bowen\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Homework3\main.c
      1          #include "main.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     __NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD404             BMI.N    ??__NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x....             LDR.N    R2,??DataTable3  ;; 0xe000e400
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x5411             STRB     R1,[R2, R0]
   \   0000000E   0xE007             B.N      ??__NVIC_SetPriority_1
   \                     ??__NVIC_SetPriority_0: (+1)
   \   00000010   0x0109             LSLS     R1,R1,#+4
   \   00000012   0x....             LDR.N    R2,??DataTable3_1  ;; 0xe000ed18
   \   00000014   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000016   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000001A   0x4410             ADD      R0,R2,R0
   \   0000001C   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \                     ??__NVIC_SetPriority_1: (+1)
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t SysTick_Config(uint32_t)
   \                     SysTick_Config: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x1E41             SUBS     R1,R0,#+1
   \   00000004   0xF1B1 0x7F80      CMP      R1,#+16777216
   \   00000008   0xD301             BCC.N    ??SysTick_Config_0
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xE00E             B.N      ??SysTick_Config_1
   \                     ??SysTick_Config_0: (+1)
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable3_2  ;; 0xe000e014
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0x210F             MOVS     R1,#+15
   \   00000016   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000001A   0x.... 0x....      BL       __NVIC_SetPriority
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR.N    R1,??DataTable3_3  ;; 0xe000e018
   \   00000022   0x6008             STR      R0,[R1, #+0]
   \   00000024   0x2007             MOVS     R0,#+7
   \   00000026   0x....             LDR.N    R1,??DataTable3_4  ;; 0xe000e010
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0x2000             MOVS     R0,#+0
   \                     ??SysTick_Config_1: (+1)
   \   0000002C   0xBD02             POP      {R1,PC}          ;; return
      2          
      3          void Delay(__IO uint32_t nTime);
      4          extern __IO uint32_t TimingDelay;
      5          

   \                                 In section .bss, align 4
      6          signed int portA = 0;
   \                     portA:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      7          signed int portE = 0;
   \                     portE:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      8          signed int portD = 0;
   \                     portD:
   \   00000000                      DS8 4
      9          

   \                                 In section .bss, align 4
     10          GPIO_InitTypeDef   GPIO_InitStructure;
   \                     GPIO_InitStructure:
   \   00000000                      DS8 8
     11          

   \                                 In section .text, align 2, keep-with-next
     12          int main(void)
     13          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     14            /*!< At this stage the microcontroller clock setting is already configured, 
     15                 this is done through SystemInit() function which is called from startup
     16                 files (startup_stm32f40xx.s/startup_stm32f427x.s/startup_stm32f429x.s)
     17                 before to branch to application main. 
     18                 To reconfigure the default setting of SystemInit() function, refer to
     19                 system_stm32f4xx.c file
     20               */  
     21              
     22          
     23            /* The clock generation has been set up to run 100MHz */
     24          
     25          
     26            /* Setup SysTick Reload Counter for 100MHz / 1000 = 1ms*/
     27            SysTick_Config(SystemCoreClock/1000);
   \   00000002   0x....             LDR.N    R0,??DataTable3_5
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF44F 0x717A      MOV      R1,#+1000
   \   0000000A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000000E   0x.... 0x....      BL       SysTick_Config
     28          //  SysTick->CTRL |= (2 << 1);
     29            
     30            /* GPIOA, GPIOD, and GPIOE Peripheral Clock enable */
     31            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     32            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE);
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x2008             MOVS     R0,#+8
   \   0000001E   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     33            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE,ENABLE);
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x2010             MOVS     R0,#+16
   \   00000026   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     34            
     35            /* Configure PA0:PA7 input */
     36            GPIO_InitStructure.GPIO_Pin = 0x00FF;
   \   0000002A   0x20FF             MOVS     R0,#+255
   \   0000002C   0x....             LDR.N    R1,??DataTable3_6
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     37            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable3_6
   \   00000034   0x7108             STRB     R0,[R1, #+4]
     38            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable3_6
   \   0000003A   0x71C8             STRB     R0,[R1, #+7]
     39            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   0000003C   0x....             LDR.N    R1,??DataTable3_6
   \   0000003E   0x....             LDR.N    R0,??DataTable3_7  ;; 0x40020000
   \   00000040   0x.... 0x....      BL       GPIO_Init
     40            
     41            /* Configure PE8:PE15 input */
     42            GPIO_InitStructure.GPIO_Pin = 0xFF00;
   \   00000044   0xF44F 0x407F      MOV      R0,#+65280
   \   00000048   0x....             LDR.N    R1,??DataTable3_6
   \   0000004A   0x6008             STR      R0,[R1, #+0]
     43            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR.N    R1,??DataTable3_6
   \   00000050   0x7108             STRB     R0,[R1, #+4]
     44            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x....             LDR.N    R1,??DataTable3_6
   \   00000056   0x71C8             STRB     R0,[R1, #+7]
     45            GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   00000058   0x....             LDR.N    R1,??DataTable3_6
   \   0000005A   0x....             LDR.N    R0,??DataTable3_8  ;; 0x40021000
   \   0000005C   0x.... 0x....      BL       GPIO_Init
     46            
     47            /* Confiugure PD0:PD8 output */
     48            GPIO_InitStructure.GPIO_Pin = 0x01FF;
   \   00000060   0xF240 0x10FF      MOVW     R0,#+511
   \   00000064   0x....             LDR.N    R1,??DataTable3_6
   \   00000066   0x6008             STR      R0,[R1, #+0]
     49            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x....             LDR.N    R1,??DataTable3_6
   \   0000006C   0x7108             STRB     R0,[R1, #+4]
     50            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x....             LDR.N    R1,??DataTable3_6
   \   00000072   0x71C8             STRB     R0,[R1, #+7]
     51            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x....             LDR.N    R1,??DataTable3_6
   \   00000078   0x7188             STRB     R0,[R1, #+6]
     52            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000007A   0x2003             MOVS     R0,#+3
   \   0000007C   0x....             LDR.N    R1,??DataTable3_6
   \   0000007E   0x7148             STRB     R0,[R1, #+5]
     53            GPIO_Init(GPIOD, &GPIO_InitStructure);
   \   00000080   0x....             LDR.N    R1,??DataTable3_6
   \   00000082   0x....             LDR.N    R0,??DataTable3_9  ;; 0x40020c00
   \   00000084   0x.... 0x....      BL       GPIO_Init
     54             
     55            /* Infinite loop */
     56            while (1)
     57            {
     58              /* Sample every 20ms */
     59              Delay(20);
   \                     ??main_0: (+1)
   \   00000088   0x2014             MOVS     R0,#+20
   \   0000008A   0x.... 0x....      BL       Delay
     60              
     61              /* Read input ports, make sure 8 bits are least significant bytes  */
     62              portA = GPIOA->IDR;
   \   0000008E   0x....             LDR.N    R0,??DataTable3_10  ;; 0x40020010
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x....             LDR.N    R1,??DataTable3_11
   \   00000094   0x6008             STR      R0,[R1, #+0]
     63              portE = GPIOE->IDR >> 8;
   \   00000096   0x....             LDR.N    R0,??DataTable3_12  ;; 0x40021010
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x0A00             LSRS     R0,R0,#+8
   \   0000009C   0x....             LDR.N    R1,??DataTable3_13
   \   0000009E   0x6008             STR      R0,[R1, #+0]
     64              portD = portA + portE;
   \   000000A0   0x....             LDR.N    R0,??DataTable3_11
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x....             LDR.N    R1,??DataTable3_13
   \   000000A6   0x6809             LDR      R1,[R1, #+0]
   \   000000A8   0x1808             ADDS     R0,R1,R0
   \   000000AA   0x....             LDR.N    R1,??DataTable3_14
   \   000000AC   0x6008             STR      R0,[R1, #+0]
     65              
     66              /* Check for 9th bit after addition (overflow) */
     67              if(portD & 0x0100)
     68              {
     69                /* Extra logic can be used to signal arithmetic overflow */
     70                /* We just use the 9th bit of output port, so no extra logic is needed */
     71              }
     72              
     73              /* Write sum to output ports*/
     74              GPIOD->ODR = portD;
   \   000000AE   0x....             LDR.N    R0,??DataTable3_14
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x....             LDR.N    R1,??DataTable3_15  ;; 0x40020c14
   \   000000B4   0x6008             STR      R0,[R1, #+0]
     75              GPIOD->ODR ^= 0xffff;
   \   000000B6   0x....             LDR.N    R0,??DataTable3_15  ;; 0x40020c14
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF480 0x407F      EOR      R0,R0,#0xFF00
   \   000000BE   0xF090 0x00FF      EORS     R0,R0,#0xFF
   \   000000C2   0x....             LDR.N    R1,??DataTable3_15  ;; 0x40020c14
   \   000000C4   0x6008             STR      R0,[R1, #+0]
   \   000000C6   0xE7DF             B.N      ??main_0
     76            }
     77          }
     78          
     79          /* Delay function holds in while loop for duration of SysTick clock (1ms) */

   \                                 In section .text, align 2, keep-with-next
     80          void Delay(__IO uint32_t nTime)
     81          { 
   \                     Delay: (+1)
   \   00000000   0xB401             PUSH     {R0}
     82            TimingDelay = nTime;
   \   00000002   0x9800             LDR      R0,[SP, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable3_16
   \   00000006   0x6008             STR      R0,[R1, #+0]
     83            while(TimingDelay != 0);
   \                     ??Delay_0: (+1)
   \   00000008   0x....             LDR.N    R0,??DataTable3_16
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD1FB             BNE.N    ??Delay_0
     84          }
   \   00000010   0xB001             ADD      SP,SP,#+4
   \   00000012   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0xE000E018         DC32     0xe000e018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     GPIO_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x40020010         DC32     0x40020010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     portA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x40021010         DC32     0x40021010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     portE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     portD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x40020C14         DC32     0x40020c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     TimingDelay

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   Delay
       8   SysTick_Config
         8   -> __NVIC_SetPriority
       0   __NVIC_SetPriority
       8   main
         8   -> Delay
         8   -> GPIO_Init
         8   -> RCC_AHB1PeriphClockCmd
         8   -> SysTick_Config


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      20  Delay
       8  GPIO_InitStructure
      46  SysTick_Config
      34  __NVIC_SetPriority
     200  main
       4  portA
       4  portD
       4  portE

 
  20 bytes in section .bss
 368 bytes in section .text
 
 368 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: none
