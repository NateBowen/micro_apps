###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.3.12102/W32 for ARM       25/Jan/2017  09:18:49
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\main.c
#    Command line =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\main.c
#        -D USE_STDPERIPH_DRIVER -D STM32F40XX -D USE_STM324xG_EVAL -lC
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\STM324xG_EVAL\List
#        -o
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\STM324xG_EVAL\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\..\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\STM324xG_EVAL\List\main.lst
#    Object file  =  
#        C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\EWARM\STM324xG_EVAL\Obj\main.o
#
###############################################################################

C:\proj\micro_apps\arm\7.80.3\ST\STM32F4xx\STM32F4xx_DSP_StdPeriph_Lib\Project\Lab1\main.c
      1          /* ECE 4510 Lab 1 Code-2 */
      2          #include "stm32f4xx.h"
      3          #include "main.h"
      4          
      5          #include "extra.h"
      6          
      7          
      8          /* Private typedef -----------------------------------------------------------*/

   \                                 In section .bss, align 4
      9          GPIO_InitTypeDef  GPIO_InitStructure;
   \                     GPIO_InitStructure:
   \   00000000                      DS8 8
     10          
     11          void delay(int max_cnt);

   \                                 In section .text, align 2, keep-with-next
     12          int main(void)
     13          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     14            /*!< At this stage the microcontroller clock setting is already configured, 
     15                 this is done through SystemInit() function which is called from startup
     16                 files (startup_stm32f40xx.s/startup_stm32f427x.s/startup_stm32f429x.s)
     17                 before to branch to application main. 
     18                 To reconfigure the default setting of SystemInit() function, refer to
     19                 system_stm32f4xx.c file
     20               */  
     21          
     22            /* GPIOD Peripheral clock enable */
     23            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2008             MOVS     R0,#+8
   \   00000006   0x.... 0x....      BL       RCC_AHB1PeriphClockCmd
     24          
     25            /* Configure PD12, PD13, PD14, and PD15 in output pushpull mode */
     26            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
   \   0000000A   0xF44F 0x4070      MOV      R0,#+61440
   \   0000000E   0x....             LDR.N    R1,??DataTable0
   \   00000010   0x6008             STR      R0,[R1, #+0]
     27            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x....             LDR.N    R1,??DataTable0
   \   00000016   0x7108             STRB     R0,[R1, #+4]
     28            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR.N    R1,??DataTable0
   \   0000001C   0x7188             STRB     R0,[R1, #+6]
     29            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0x....             LDR.N    R1,??DataTable0
   \   00000022   0x7148             STRB     R0,[R1, #+5]
     30            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable0
   \   00000028   0x71C8             STRB     R0,[R1, #+7]
     31            GPIO_Init(GPIOD, &GPIO_InitStructure);
   \   0000002A   0x....             LDR.N    R1,??DataTable0
   \   0000002C   0x....             LDR.N    R0,??DataTable0_1  ;; 0x40020c00
   \   0000002E   0x.... 0x....      BL       GPIO_Init
     32          
     33            while (1)
     34            {
     35              /* Set PD12-15 */
     36              GPIOD->BSRRL = GPIO_Pin_12; 
   \                     ??main_0: (+1)
   \   00000032   0xF44F 0x5080      MOV      R0,#+4096
   \   00000036   0x....             LDR.N    R1,??DataTable0_2  ;; 0x40020c18
   \   00000038   0x8008             STRH     R0,[R1, #+0]
     37              GPIOD->BSRRL = GPIO_Pin_13; 
   \   0000003A   0xF44F 0x5000      MOV      R0,#+8192
   \   0000003E   0x....             LDR.N    R1,??DataTable0_2  ;; 0x40020c18
   \   00000040   0x8008             STRH     R0,[R1, #+0]
     38              GPIOD->BSRRL = GPIO_Pin_14; 
   \   00000042   0xF44F 0x4080      MOV      R0,#+16384
   \   00000046   0x....             LDR.N    R1,??DataTable0_2  ;; 0x40020c18
   \   00000048   0x8008             STRH     R0,[R1, #+0]
     39              GPIOD->BSRRL = GPIO_Pin_15; 
   \   0000004A   0xF44F 0x4000      MOV      R0,#+32768
   \   0000004E   0x....             LDR.N    R1,??DataTable0_2  ;; 0x40020c18
   \   00000050   0x8008             STRH     R0,[R1, #+0]
     40              delay(10000000);
   \   00000052   0x....             LDR.N    R0,??DataTable0_3  ;; 0x989680
   \   00000054   0x.... 0x....      BL       delay
     41              
     42              /* Reset PD12-15*/
     43              GPIOD->BSRRH = GPIO_Pin_12;
   \   00000058   0xF44F 0x5080      MOV      R0,#+4096
   \   0000005C   0x....             LDR.N    R1,??DataTable0_4  ;; 0x40020c1a
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
     44              GPIOD->BSRRH = GPIO_Pin_13;    
   \   00000060   0xF44F 0x5000      MOV      R0,#+8192
   \   00000064   0x....             LDR.N    R1,??DataTable0_4  ;; 0x40020c1a
   \   00000066   0x8008             STRH     R0,[R1, #+0]
     45              GPIOD->BSRRH = GPIO_Pin_14;
   \   00000068   0xF44F 0x4080      MOV      R0,#+16384
   \   0000006C   0x....             LDR.N    R1,??DataTable0_4  ;; 0x40020c1a
   \   0000006E   0x8008             STRH     R0,[R1, #+0]
     46              GPIOD->BSRRH = GPIO_Pin_15;
   \   00000070   0xF44F 0x4000      MOV      R0,#+32768
   \   00000074   0x....             LDR.N    R1,??DataTable0_4  ;; 0x40020c1a
   \   00000076   0x8008             STRH     R0,[R1, #+0]
     47              delay(10000000);
   \   00000078   0x....             LDR.N    R0,??DataTable0_3  ;; 0x989680
   \   0000007A   0x.... 0x....      BL       delay
   \   0000007E   0xE7D8             B.N      ??main_0
     48            }
     49          }

   \                                 In section .text, align 2, keep-with-next
     50          void delay(int max_cnt)
     51          {
     52            int cnt = 0;
   \                     delay: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xE000             B.N      ??delay_0
     53            while (cnt < max_cnt)
     54              cnt++;
   \                     ??delay_1: (+1)
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??delay_0: (+1)
   \   00000006   0x4281             CMP      R1,R0
   \   00000008   0xDBFC             BLT.N    ??delay_1
     55          }
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     GPIO_InitStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x40020C18         DC32     0x40020c18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x00989680         DC32     0x989680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x40020C1A         DC32     0x40020c1a

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   delay
       8   main
         8   -> GPIO_Init
         8   -> RCC_AHB1PeriphClockCmd
         8   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       8  GPIO_InitStructure
      12  delay
     128  main

 
   8 bytes in section .bss
 160 bytes in section .text
 
 160 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
